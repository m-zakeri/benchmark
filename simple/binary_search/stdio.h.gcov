        -:    0:Source:D:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
        -:    0:Graph:bin_search.gcno
        -:    0:Data:bin_search.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// stdio.h
        -:    3://
        -:    4://      Copyright (c) Microsoft Corporation. All rights reserved.
        -:    5://
        -:    6:// The C Standard Library <stdio.h> header.
        -:    7://
        -:    8:#pragma once
        -:    9:#ifndef _INC_STDIO // include guard for 3rd party interop
        -:   10:#define _INC_STDIO
        -:   11:
        -:   12:#include <corecrt.h>
        -:   13:#include <corecrt_wstdio.h>
        -:   14:
        -:   15:_CRT_BEGIN_C_HEADER
        -:   16:
        -:   17:/* Buffered I/O macros */
        -:   18:
        -:   19:#define BUFSIZ  512
        -:   20:
        -:   21:
        -:   22:
        -:   23:/*
        -:   24: * Default number of supported streams. _NFILE is confusing and obsolete, but
        -:   25: * supported anyway for backwards compatibility.
        -:   26: */
        -:   27:#define _NFILE      _NSTREAM_
        -:   28:
        -:   29:#define _NSTREAM_   512
        -:   30:
        -:   31:/*
        -:   32: * Number of entries in _iob[] (declared below). Note that _NSTREAM_ must be
        -:   33: * greater than or equal to _IOB_ENTRIES.
        -:   34: */
        -:   35:#define _IOB_ENTRIES 3
        -:   36:
        -:   37:#define EOF    (-1)
        -:   38:
        -:   39:#define _IOFBF 0x0000
        -:   40:#define _IOLBF 0x0040
        -:   41:#define _IONBF 0x0004
        -:   42:
        -:   43:
        -:   44:
        -:   45:#define L_tmpnam   260 // _MAX_PATH
        -:   46:#if __STDC_WANT_SECURE_LIB__
        -:   47:    #define L_tmpnam_s L_tmpnam
        -:   48:#endif
        -:   49:
        -:   50:
        -:   51:
        -:   52:/* Seek method constants */
        -:   53:
        -:   54:#define SEEK_CUR    1
        -:   55:#define SEEK_END    2
        -:   56:#define SEEK_SET    0
        -:   57:
        -:   58:
        -:   59:#define FILENAME_MAX    260
        -:   60:#define FOPEN_MAX       20
        -:   61:#define _SYS_OPEN       20
        -:   62:#define TMP_MAX         _CRT_INT_MAX
        -:   63:#if __STDC_WANT_SECURE_LIB__
        -:   64:    #define TMP_MAX_S       TMP_MAX
        -:   65:    #define _TMP_MAX_S      TMP_MAX
        -:   66:#endif
        -:   67:
        -:   68:
        -:   69:typedef __int64 fpos_t;
        -:   70:
        -:   71:
        -:   72:
        -:   73:#if _CRT_FUNCTIONS_REQUIRED
        -:   74:
        -:   75:    _Check_return_opt_
        -:   76:    _ACRTIMP errno_t __cdecl _get_stream_buffer_pointers(
        -:   77:        _In_      FILE*   _Stream,
        -:   78:        _Out_opt_ char*** _Base,
        -:   79:        _Out_opt_ char*** _Pointer,
        -:   80:        _Out_opt_ int**   _Count
        -:   81:        );
        -:   82:
        -:   83:
        -:   84:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -:   85:    //
        -:   86:    // Narrow Character Stream I/O Functions
        -:   87:    //
        -:   88:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -:   89:    #if __STDC_WANT_SECURE_LIB__
        -:   90:
        -:   91:        _Check_return_wat_
        -:   92:        _ACRTIMP errno_t __cdecl clearerr_s(
        -:   93:            _Inout_ FILE* _Stream
        -:   94:            );
        -:   95:
        -:   96:        _Check_return_wat_
        -:   97:        _ACRTIMP errno_t __cdecl fopen_s(
        -:   98:            _Outptr_result_maybenull_ FILE**      _Stream,
        -:   99:            _In_z_                    char const* _FileName,
        -:  100:            _In_z_                    char const* _Mode
        -:  101:            );
        -:  102:
        -:  103:        _Check_return_opt_
        -:  104:        _Success_(return != 0)
        -:  105:        _ACRTIMP size_t __cdecl fread_s(
        -:  106:            _Out_writes_bytes_to_(_BufferSize, _ElementSize * _ElementCount)   void*  _Buffer,
        -:  107:            _In_range_(>=, _ElementSize * _ElementCount)                       size_t _BufferSize,
        -:  108:            _In_                                                               size_t _ElementSize,
        -:  109:            _In_                                                               size_t _ElementCount,
        -:  110:            _Inout_                                                            FILE*  _Stream
        -:  111:            );
        -:  112:
        -:  113:        _Check_return_wat_
        -:  114:        _ACRTIMP errno_t __cdecl freopen_s(
        -:  115:            _Outptr_result_maybenull_ FILE**      _Stream,
        -:  116:            _In_z_                    char const* _FileName,
        -:  117:            _In_z_                    char const* _Mode,
        -:  118:            _Inout_                   FILE*       _OldStream
        -:  119:            );
        -:  120:
        -:  121:        _Success_(return != 0)
        -:  122:        _ACRTIMP char* __cdecl gets_s(
        -:  123:            _Out_writes_z_(_Size) char*   _Buffer,
        -:  124:            _In_                  rsize_t _Size
        -:  125:            );
        -:  126:
        -:  127:        _Check_return_wat_
        -:  128:        _ACRTIMP errno_t __cdecl tmpfile_s(
        -:  129:            _Out_opt_ _Deref_post_valid_ FILE** _Stream
        -:  130:            );
        -:  131:
        -:  132:        _Success_(return == 0)
        -:  133:        _Check_return_wat_
        -:  134:        _ACRTIMP errno_t __cdecl tmpnam_s(
        -:  135:            _Out_writes_z_(_Size) char*   _Buffer,
        -:  136:            _In_                  rsize_t _Size
        -:  137:            );
        -:  138:
        -:  139:    #endif
        -:  140:
        -:  141:    _ACRTIMP void __cdecl clearerr(
        -:  142:        _Inout_ FILE* _Stream
        -:  143:        );
        -:  144:
        -:  145:    _Success_(return != -1)
        -:  146:    _Check_return_opt_
        -:  147:    _ACRTIMP int __cdecl fclose(
        -:  148:        _Inout_ FILE* _Stream
        -:  149:        );
        -:  150:
        -:  151:    _Check_return_opt_
        -:  152:    _ACRTIMP int __cdecl _fcloseall(void);
        -:  153:
        -:  154:    _Check_return_
        -:  155:    _ACRTIMP FILE* __cdecl _fdopen(
        -:  156:        _In_   int         _FileHandle,
        -:  157:        _In_z_ char const* _Mode
        -:  158:        );
        -:  159:
        -:  160:    _Check_return_
        -:  161:    _ACRTIMP int __cdecl feof(
        -:  162:        _In_ FILE* _Stream
        -:  163:        );
        -:  164:
        -:  165:    _Check_return_
        -:  166:    _ACRTIMP int __cdecl ferror(
        -:  167:        _In_ FILE* _Stream
        -:  168:        );
        -:  169:
        -:  170:    _Check_return_opt_
        -:  171:    _ACRTIMP int __cdecl fflush(
        -:  172:        _Inout_opt_ FILE* _Stream
        -:  173:        );
        -:  174:
        -:  175:    _Success_(return != EOF)
        -:  176:    _Check_return_opt_
        -:  177:    _ACRTIMP int __cdecl fgetc(
        -:  178:        _Inout_ FILE* _Stream
        -:  179:        );
        -:  180:
        -:  181:    _Check_return_opt_
        -:  182:    _ACRTIMP int __cdecl _fgetchar(void);
        -:  183:
        -:  184:    _Success_(return != EOF)
        -:  185:    _Check_return_opt_
        -:  186:    _ACRTIMP int __cdecl fgetpos(
        -:  187:        _Inout_ FILE*   _Stream,
        -:  188:        _Out_   fpos_t* _Position
        -:  189:        );
        -:  190:
        -:  191:    _Success_(return == _Buffer)
        -:  192:    _Check_return_opt_
        -:  193:    _ACRTIMP char* __cdecl fgets(
        -:  194:        _Out_writes_z_(_MaxCount) char* _Buffer,
        -:  195:        _In_                      int   _MaxCount,
        -:  196:        _Inout_                   FILE* _Stream
        -:  197:        );
        -:  198:
        -:  199:    _Check_return_
        -:  200:    _ACRTIMP int __cdecl _fileno(
        -:  201:        _In_ FILE* _Stream
        -:  202:        );
        -:  203:
        -:  204:    _Check_return_opt_
        -:  205:    _ACRTIMP int __cdecl _flushall(void);
        -:  206:
        -:  207:    _Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s)
        -:  208:    _ACRTIMP FILE* __cdecl fopen(
        -:  209:        _In_z_ char const* _FileName,
        -:  210:        _In_z_ char const* _Mode
        -:  211:        );
        -:  212:
        -:  213:
        -:  214:    _Success_(return != EOF)
        -:  215:    _Check_return_opt_
        -:  216:    _ACRTIMP int __cdecl fputc(
        -:  217:        _In_    int   _Character,
        -:  218:        _Inout_ FILE* _Stream
        -:  219:        );
        -:  220:
        -:  221:    _Check_return_opt_
        -:  222:    _ACRTIMP int __cdecl _fputchar(
        -:  223:        _In_ int _Character
        -:  224:        );
        -:  225:
        -:  226:    _Success_(return != EOF)
        -:  227:    _Check_return_opt_
        -:  228:    _ACRTIMP int __cdecl fputs(
        -:  229:        _In_z_  char const* _Buffer,
        -:  230:        _Inout_ FILE*       _Stream
        -:  231:        );
        -:  232:
        -:  233:    _Check_return_opt_
        -:  234:    _ACRTIMP size_t __cdecl fread(
        -:  235:        _Out_writes_bytes_(_ElementSize * _ElementCount) void*  _Buffer,
        -:  236:        _In_                                             size_t _ElementSize,
        -:  237:        _In_                                             size_t _ElementCount,
        -:  238:        _Inout_                                          FILE*  _Stream
        -:  239:        );
        -:  240:
        -:  241:    _Success_(return != 0)
        -:  242:    _Check_return_ _CRT_INSECURE_DEPRECATE(freopen_s)
        -:  243:    _ACRTIMP FILE* __cdecl freopen(
        -:  244:        _In_z_  char const* _FileName,
        -:  245:        _In_z_  char const* _Mode,
        -:  246:        _Inout_ FILE*       _Stream
        -:  247:        );
        -:  248:
        -:  249:    _Check_return_
        -:  250:    _ACRTIMP FILE* __cdecl _fsopen(
        -:  251:        _In_z_ char const* _FileName,
        -:  252:        _In_z_ char const* _Mode,
        -:  253:        _In_   int         _ShFlag
        -:  254:        );
        -:  255:
        -:  256:    _Success_(return == 0)
        -:  257:    _Check_return_opt_
        -:  258:    _ACRTIMP int __cdecl fsetpos(
        -:  259:        _Inout_ FILE*         _Stream,
        -:  260:        _In_    fpos_t const* _Position
        -:  261:        );
        -:  262:
        -:  263:    _Success_(return == 0)
        -:  264:    _Check_return_opt_
        -:  265:    _ACRTIMP int __cdecl fseek(
        -:  266:        _Inout_ FILE* _Stream,
        -:  267:        _In_    long  _Offset,
        -:  268:        _In_    int   _Origin
        -:  269:        );
        -:  270:
        -:  271:    _Success_(return == 0)
        -:  272:    _Check_return_opt_
        -:  273:    _ACRTIMP int __cdecl _fseeki64(
        -:  274:        _Inout_ FILE*   _Stream,
        -:  275:        _In_    __int64 _Offset,
        -:  276:        _In_    int     _Origin
        -:  277:        );
        -:  278:
        -:  279:    _Success_(return != -1)
        -:  280:    _Check_return_
        -:  281:    _ACRTIMP long __cdecl ftell(
        -:  282:        _Inout_ FILE* _Stream
        -:  283:        );
        -:  284:
        -:  285:    _Success_(return != -1)
        -:  286:    _Check_return_
        -:  287:    _ACRTIMP __int64 __cdecl _ftelli64(
        -:  288:        _Inout_ FILE* _Stream
        -:  289:        );
        -:  290:
        -:  291:    _Check_return_opt_
        -:  292:    _ACRTIMP size_t __cdecl fwrite(
        -:  293:        _In_reads_bytes_(_ElementSize * _ElementCount) void const* _Buffer,
        -:  294:        _In_                                           size_t      _ElementSize,
        -:  295:        _In_                                           size_t      _ElementCount,
        -:  296:        _Inout_                                        FILE*       _Stream
        -:  297:        );
        -:  298:
        -:  299:    _Success_(return != EOF)
        -:  300:    _Check_return_
        -:  301:    _ACRTIMP int __cdecl getc(
        -:  302:        _Inout_ FILE* _Stream
        -:  303:        );
        -:  304:
        -:  305:    _Check_return_
        -:  306:    _ACRTIMP int __cdecl getchar(void);
        -:  307:
        -:  308:    _Check_return_
        -:  309:    _ACRTIMP int __cdecl _getmaxstdio(void);
        -:  310:
        -:  311:    __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_0(
        -:  312:        char*, gets_s,
        -:  313:        char, _Buffer)
        -:  314:
        -:  315:    _Check_return_
        -:  316:    _ACRTIMP int __cdecl _getw(
        -:  317:        _Inout_ FILE* _Stream
        -:  318:        );
        -:  319:
        -:  320:    _ACRTIMP void __cdecl perror(
        -:  321:        _In_opt_z_ char const* _ErrorMessage
        -:  322:        );
        -:  323:
        -:  324:    #if defined _CRT_USE_WINAPI_FAMILY_DESKTOP_APP
        -:  325:
        -:  326:        _Success_(return != -1)
        -:  327:        _Check_return_opt_
        -:  328:        _DCRTIMP int __cdecl _pclose(
        -:  329:            _Inout_ FILE* _Stream
        -:  330:            );
        -:  331:
        -:  332:        _Check_return_
        -:  333:        _DCRTIMP FILE* __cdecl _popen(
        -:  334:            _In_z_ char const* _Command,
        -:  335:            _In_z_ char const* _Mode
        -:  336:            );
        -:  337:
        -:  338:    #endif
        -:  339:
        -:  340:    _Success_(return != EOF)
        -:  341:    _Check_return_opt_
        -:  342:    _ACRTIMP int __cdecl putc(
        -:  343:        _In_    int   _Character,
        -:  344:        _Inout_ FILE* _Stream
        -:  345:        );
        -:  346:
        -:  347:    _Check_return_opt_
        -:  348:    _ACRTIMP int __cdecl putchar(
        -:  349:        _In_ int _Character
        -:  350:        );
        -:  351:
        -:  352:    _Check_return_opt_
        -:  353:    _ACRTIMP int __cdecl puts(
        -:  354:        _In_z_ char const* _Buffer
        -:  355:        );
        -:  356:
        -:  357:    _Success_(return != -1)
        -:  358:    _Check_return_opt_
        -:  359:    _ACRTIMP int __cdecl _putw(
        -:  360:        _In_    int   _Word,
        -:  361:        _Inout_ FILE* _Stream
        -:  362:        );
        -:  363:
        -:  364:    _ACRTIMP int __cdecl remove(
        -:  365:        _In_z_ char const* _FileName
        -:  366:        );
        -:  367:
        -:  368:    _Check_return_
        -:  369:    _ACRTIMP int __cdecl rename(
        -:  370:        _In_z_ char const* _OldFileName,
        -:  371:        _In_z_ char const* _NewFileName
        -:  372:        );
        -:  373:
        -:  374:    _ACRTIMP int __cdecl _unlink(
        -:  375:        _In_z_ char const* _FileName
        -:  376:        );
        -:  377:
        -:  378:    #if defined(_CRT_INTERNAL_NONSTDC_NAMES) && _CRT_INTERNAL_NONSTDC_NAMES
        -:  379:
        -:  380:        _CRT_NONSTDC_DEPRECATE(_unlink)
        -:  381:        _ACRTIMP int __cdecl unlink(
        -:  382:            _In_z_ char const* _FileName
        -:  383:            );
        -:  384:
        -:  385:    #endif
        -:  386:
        -:  387:    _ACRTIMP void __cdecl rewind(
        -:  388:        _Inout_ FILE* _Stream
        -:  389:        );
        -:  390:
        -:  391:    _Check_return_opt_
        -:  392:    _ACRTIMP int __cdecl _rmtmp(void);
        -:  393:
        -:  394:    _CRT_INSECURE_DEPRECATE(setvbuf)
        -:  395:    _ACRTIMP void __cdecl setbuf(
        -:  396:        _Inout_                                             FILE* _Stream,
        -:  397:        _Inout_updates_opt_(BUFSIZ) _Post_readable_size_(0) char* _Buffer
        -:  398:        );
        -:  399:
        -:  400:    _Check_return_opt_
        -:  401:    _ACRTIMP int __cdecl _setmaxstdio(
        -:  402:        _In_ int _Maximum
        -:  403:        );
        -:  404:
        -:  405:    _Success_(return == 0)
        -:  406:    _Check_return_opt_
        -:  407:    _ACRTIMP int __cdecl setvbuf(
        -:  408:        _Inout_                      FILE*  _Stream,
        -:  409:        _Inout_updates_opt_(_Size)   char*  _Buffer,
        -:  410:        _In_                         int    _Mode,
        -:  411:        _In_                         size_t _Size
        -:  412:        );
        -:  413:
        -:  414:    #if defined _DEBUG && defined _CRTDBG_MAP_ALLOC
        -:  415:        #pragma push_macro("_tempnam")
        -:  416:        #undef _tempnam
        -:  417:    #endif
        -:  418:
        -:  419:    _Check_return_
        -:  420:    _ACRTIMP _CRTALLOCATOR char* __cdecl _tempnam(
        -:  421:        _In_opt_z_ char const* _DirectoryName,
        -:  422:        _In_opt_z_ char const* _FilePrefix
        -:  423:        );
        -:  424:
        -:  425:    #if defined _DEBUG && defined _CRTDBG_MAP_ALLOC
        -:  426:        #pragma pop_macro("_tempnam")
        -:  427:    #endif
        -:  428:
        -:  429:    _Check_return_ _CRT_INSECURE_DEPRECATE(tmpfile_s)
        -:  430:    _ACRTIMP FILE* __cdecl tmpfile(void);
        -:  431:
        -:  432:    __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_0(
        -:  433:        _Success_(return == 0)
        -:  434:        errno_t, tmpnam_s,
        -:  435:        _Always_(_Post_z_) char, _Buffer
        -:  436:        )
        -:  437:
        -:  438:#pragma warning(push)
        -:  439:#pragma warning(disable: 28726) // __WARNING_BANNED_API_USAGEL2
        -:  440:__DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_0(
        -:  441:        _Success_(return != 0)
        -:  442:        char*, __RETURN_POLICY_DST, _ACRTIMP, tmpnam,
        -:  443:        _Pre_maybenull_ _Always_(_Post_z_), char, _Buffer
        -:  444:        )
        -:  445:#pragma warning(pop)
        -:  446:
        -:  447:    _Success_(return != EOF)
        -:  448:    _Check_return_opt_
        -:  449:    _ACRTIMP int __cdecl ungetc(
        -:  450:        _In_    int   _Character,
        -:  451:        _Inout_ FILE* _Stream
        -:  452:        );
        -:  453:
        -:  454:
        -:  455:
        -:  456:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -:  457:    //
        -:  458:    // I/O Synchronization and _nolock family of I/O functions
        -:  459:    //
        -:  460:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -:  461:    _ACRTIMP void __cdecl _lock_file(
        -:  462:        _Inout_ FILE* _Stream
        -:  463:        );
        -:  464:
        -:  465:    _ACRTIMP void __cdecl _unlock_file(
        -:  466:        _Inout_ FILE* _Stream
        -:  467:        );
        -:  468:
        -:  469:    _Success_(return != EOF)
        -:  470:    _Check_return_opt_
        -:  471:    _ACRTIMP int __cdecl _fclose_nolock(
        -:  472:        _Inout_ FILE* _Stream
        -:  473:        );
        -:  474:
        -:  475:    _Success_(return != EOF)
        -:  476:    _Check_return_opt_
        -:  477:    _ACRTIMP int __cdecl _fflush_nolock(
        -:  478:        _Inout_opt_ FILE* _Stream
        -:  479:        );
        -:  480:
        -:  481:    _Success_(return != EOF)
        -:  482:    _Check_return_opt_
        -:  483:    _ACRTIMP int __cdecl _fgetc_nolock(
        -:  484:        _Inout_ FILE* _Stream
        -:  485:        );
        -:  486:
        -:  487:    _Success_(return != EOF)
        -:  488:    _Check_return_opt_
        -:  489:    _ACRTIMP int __cdecl _fputc_nolock(
        -:  490:        _In_    int   _Character,
        -:  491:        _Inout_ FILE* _Stream
        -:  492:        );
        -:  493:
        -:  494:    _Check_return_opt_
        -:  495:    _ACRTIMP size_t __cdecl _fread_nolock(
        -:  496:        _Out_writes_bytes_(_ElementSize * _ElementCount) void*  _Buffer,
        -:  497:        _In_                                             size_t _ElementSize,
        -:  498:        _In_                                             size_t _ElementCount,
        -:  499:        _Inout_                                          FILE*  _Stream
        -:  500:        );
        -:  501:
        -:  502:    _Check_return_opt_
        -:  503:    _Success_(return != 0)
        -:  504:    _ACRTIMP size_t __cdecl _fread_nolock_s(
        -:  505:        _Out_writes_bytes_to_(_BufferSize, _ElementSize * _ElementCount) void*  _Buffer,
        -:  506:        _In_range_(>=, _ElementSize * _ElementCount)                     size_t _BufferSize,
        -:  507:        _In_                                                             size_t _ElementSize,
        -:  508:        _In_                                                             size_t _ElementCount,
        -:  509:        _Inout_                                                          FILE*  _Stream
        -:  510:        );
        -:  511:
        -:  512:    _Check_return_opt_
        -:  513:    _ACRTIMP int __cdecl _fseek_nolock(
        -:  514:        _Inout_ FILE* _Stream,
        -:  515:        _In_    long  _Offset,
        -:  516:        _In_    int   _Origin
        -:  517:        );
        -:  518:
        -:  519:    _Check_return_opt_
        -:  520:    _ACRTIMP int __cdecl _fseeki64_nolock(
        -:  521:        _Inout_ FILE*   _Stream,
        -:  522:        _In_    __int64 _Offset,
        -:  523:        _In_    int     _Origin
        -:  524:        );
        -:  525:
        -:  526:    _Check_return_
        -:  527:    _ACRTIMP long __cdecl _ftell_nolock(
        -:  528:        _Inout_ FILE* _Stream
        -:  529:        );
        -:  530:
        -:  531:    _Check_return_
        -:  532:    _ACRTIMP __int64 __cdecl _ftelli64_nolock(
        -:  533:        _Inout_ FILE* _Stream
        -:  534:        );
        -:  535:
        -:  536:    _Check_return_opt_
        -:  537:    _ACRTIMP size_t __cdecl _fwrite_nolock(
        -:  538:        _In_reads_bytes_(_ElementSize * _ElementCount) void const* _Buffer,
        -:  539:        _In_                                           size_t      _ElementSize,
        -:  540:        _In_                                           size_t      _ElementCount,
        -:  541:        _Inout_                                        FILE*       _Stream
        -:  542:        );
        -:  543:
        -:  544:    _Check_return_opt_
        -:  545:    _ACRTIMP int __cdecl _getc_nolock(
        -:  546:        _Inout_ FILE* _Stream
        -:  547:        );
        -:  548:
        -:  549:    _Check_return_opt_
        -:  550:    _ACRTIMP int __cdecl _putc_nolock(
        -:  551:        _In_    int   _Character,
        -:  552:        _Inout_ FILE* _Stream
        -:  553:        );
        -:  554:
        -:  555:    _Check_return_opt_
        -:  556:    _ACRTIMP int __cdecl _ungetc_nolock(
        -:  557:        _In_    int   _Character,
        -:  558:        _Inout_ FILE* _Stream
        -:  559:        );
        -:  560:
        -:  561:    #define _getchar_nolock()     _getc_nolock(stdin)
        -:  562:    #define _putchar_nolock(_Ch)  _putc_nolock(_Ch, stdout)
        -:  563:    #define _getwchar_nolock()    _getwc_nolock(stdin)
        -:  564:    #define _putwchar_nolock(_Ch) _putwc_nolock(_Ch, stdout)
        -:  565:
        -:  566:
        -:  567:
        -:  568:    #if defined _CRT_DISABLE_PERFCRIT_LOCKS && !defined _DLL
        -:  569:        #define fclose(_Stream)                                           _fclose_nolock(_Stream)
        -:  570:        #define fflush(_Stream)                                           _fflush_nolock(_Stream)
        -:  571:        #define fgetc(_Stream)                                            _fgetc_nolock(_Stream)
        -:  572:        #define fputc(_Ch, _Stream)                                       _fputc_nolock(_Ch, _Stream)
        -:  573:        #define fread(_DstBuf, _ElementSize, _Count, _Stream)             _fread_nolock(_DstBuf, _ElementSize, _Count, _Stream)
        -:  574:        #define fread_s(_DstBuf, _DstSize, _ElementSize, _Count, _Stream) _fread_nolock_s(_DstBuf, _DstSize, _ElementSize, _Count, _Stream)
        -:  575:        #define fseek(_Stream, _Offset, _Origin)                          _fseek_nolock(_Stream, _Offset, _Origin)
        -:  576:        #define _fseeki64(_Stream, _Offset, _Origin)                      _fseeki64_nolock(_Stream, _Offset, _Origin)
        -:  577:        #define ftell(_Stream)                                            _ftell_nolock(_Stream)
        -:  578:        #define _ftelli64(_Stream)                                        _ftelli64_nolock(_Stream)
        -:  579:        #define fwrite(_SrcBuf, _ElementSize, _Count, _Stream)            _fwrite_nolock(_SrcBuf, _ElementSize, _Count, _Stream)
        -:  580:        #define getc(_Stream)                                             _getc_nolock(_Stream)
        -:  581:        #define putc(_Ch, _Stream)                                        _putc_nolock(_Ch, _Stream)
        -:  582:        #define ungetc(_Ch, _Stream)                                      _ungetc_nolock(_Ch, _Stream)
        -:  583:    #endif
        -:  584:
        -:  585:
        -:  586:
        -:  587:    _ACRTIMP int* __cdecl __p__commode(void);
        -:  588:
        -:  589:    #ifdef _CRT_DECLARE_GLOBAL_VARIABLES_DIRECTLY
        -:  590:        extern int _commode;
        -:  591:    #else
        -:  592:        #define _commode (*__p__commode())
        -:  593:    #endif
        -:  594:
        -:  595:
        -:  596:
        -:  597:    // Variadic functions are not supported in managed code under /clr
        -:  598:    #if defined _M_CEE_MIXED
        -:  599:        #pragma managed(push, off)
        -:  600:    #endif
        -:  601:
        -:  602:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -:  603:    //
        -:  604:    // Narrow Character Formatted Output Functions (Stream)
        -:  605:    //
        -:  606:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -:  607:    _ACRTIMP int __cdecl __stdio_common_vfprintf(
        -:  608:        _In_                                    unsigned __int64 _Options,
        -:  609:        _Inout_                                 FILE*            _Stream,
        -:  610:        _In_z_ _Printf_format_string_params_(2) char const*      _Format,
        -:  611:        _In_opt_                                _locale_t        _Locale,
        -:  612:                                                va_list          _ArgList
        -:  613:        );
        -:  614:
        -:  615:    _ACRTIMP int __cdecl __stdio_common_vfprintf_s(
        -:  616:        _In_                                    unsigned __int64 _Options,
        -:  617:        _Inout_                                 FILE*            _Stream,
        -:  618:        _In_z_ _Printf_format_string_params_(2) char const*      _Format,
        -:  619:        _In_opt_                                _locale_t        _Locale,
        -:  620:                                                va_list          _ArgList
        -:  621:        );
        -:  622:
        -:  623:    _Success_(return >= 0)
        -:  624:    _ACRTIMP int __cdecl __stdio_common_vfprintf_p(
        -:  625:        _In_                                    unsigned __int64 _Options,
        -:  626:        _Inout_                                 FILE*            _Stream,
        -:  627:        _In_z_ _Printf_format_string_params_(2) char const*      _Format,
        -:  628:        _In_opt_                                _locale_t        _Locale,
        -:  629:                                                va_list          _ArgList
        -:  630:        );
        -:  631:
        -:  632:    _Check_return_opt_
        4:  633:    _CRT_STDIO_INLINE int __CRTDECL _vfprintf_l(
        -:  634:        _Inout_  FILE*       const _Stream,
        -:  635:        _In_z_   char const* const _Format,
        -:  636:        _In_opt_ _locale_t   const _Locale,
        -:  637:                 va_list           _ArgList
        -:  638:        )
        -:  639:    #if defined _NO_CRT_STDIO_INLINE
        -:  640:    ;
        -:  641:    #else
        -:  642:    {
        4:  643:        return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);
        -:  644:    }
        -:  645:    #endif
        -:  646:
        -:  647:    _Check_return_opt_
        -:  648:    _CRT_STDIO_INLINE int __CRTDECL vfprintf(
        -:  649:        _Inout_                       FILE*       const _Stream,
        -:  650:        _In_z_ _Printf_format_string_ char const* const _Format,
        -:  651:                                      va_list           _ArgList
        -:  652:        )
        -:  653:    #if defined _NO_CRT_STDIO_INLINE
        -:  654:    ;
        -:  655:    #else
        -:  656:    {
        -:  657:        return _vfprintf_l(_Stream, _Format, NULL, _ArgList);
        -:  658:    }
        -:  659:    #endif
        -:  660:
        -:  661:    _Check_return_opt_
        -:  662:    _CRT_STDIO_INLINE int __CRTDECL _vfprintf_s_l(
        -:  663:        _Inout_  FILE*       const _Stream,
        -:  664:        _In_z_   char const* const _Format,
        -:  665:        _In_opt_ _locale_t   const _Locale,
        -:  666:                 va_list           _ArgList
        -:  667:        )
        -:  668:    #if defined _NO_CRT_STDIO_INLINE
        -:  669:    ;
        -:  670:    #else
        -:  671:    {
        -:  672:        return __stdio_common_vfprintf_s(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);
        -:  673:    }
        -:  674:    #endif
        -:  675:
        -:  676:    #if __STDC_WANT_SECURE_LIB__
        -:  677:
        -:  678:        _Check_return_opt_
        -:  679:        _CRT_STDIO_INLINE int __CRTDECL vfprintf_s(
        -:  680:            _Inout_                       FILE*       const _Stream,
        -:  681:            _In_z_ _Printf_format_string_ char const* const _Format,
        -:  682:                                          va_list           _ArgList
        -:  683:            )
        -:  684:    #if defined _NO_CRT_STDIO_INLINE
        -:  685:    ;
        -:  686:    #else
        -:  687:        {
        -:  688:            return _vfprintf_s_l(_Stream, _Format, NULL, _ArgList);
        -:  689:        }
        -:  690:    #endif
        -:  691:
        -:  692:    #endif
        -:  693:
        -:  694:    _Check_return_opt_
        -:  695:    _CRT_STDIO_INLINE int __CRTDECL _vfprintf_p_l(
        -:  696:        _Inout_  FILE*       const _Stream,
        -:  697:        _In_z_   char const* const _Format,
        -:  698:        _In_opt_ _locale_t   const _Locale,
        -:  699:                 va_list           _ArgList
        -:  700:        )
        -:  701:    #if defined _NO_CRT_STDIO_INLINE
        -:  702:    ;
        -:  703:    #else
        -:  704:    {
        -:  705:        return __stdio_common_vfprintf_p(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);
        -:  706:    }
        -:  707:    #endif
        -:  708:
        -:  709:    _Check_return_opt_
        -:  710:    _CRT_STDIO_INLINE int __CRTDECL _vfprintf_p(
        -:  711:        _Inout_                       FILE*       const _Stream,
        -:  712:        _In_z_ _Printf_format_string_ char const* const _Format,
        -:  713:                                      va_list           _ArgList
        -:  714:        )
        -:  715:    #if defined _NO_CRT_STDIO_INLINE
        -:  716:    ;
        -:  717:    #else
        -:  718:    {
        -:  719:        return _vfprintf_p_l(_Stream, _Format, NULL, _ArgList);
        -:  720:    }
        -:  721:    #endif
        -:  722:
        -:  723:    _Check_return_opt_
        -:  724:    _CRT_STDIO_INLINE int __CRTDECL _vprintf_l(
        -:  725:        _In_z_ _Printf_format_string_params_(2) char const* const _Format,
        -:  726:        _In_opt_                                _locale_t   const _Locale,
        -:  727:                                                va_list           _ArgList
        -:  728:        )
        -:  729:    #if defined _NO_CRT_STDIO_INLINE
        -:  730:    ;
        -:  731:    #else
        -:  732:    {
        -:  733:        return _vfprintf_l(stdout, _Format, _Locale, _ArgList);
        -:  734:    }
        -:  735:    #endif
        -:  736:
        -:  737:    _Check_return_opt_
        -:  738:    _CRT_STDIO_INLINE int __CRTDECL vprintf(
        -:  739:        _In_z_ _Printf_format_string_ char const* const _Format,
        -:  740:                                      va_list           _ArgList
        -:  741:        )
        -:  742:    #if defined _NO_CRT_STDIO_INLINE
        -:  743:    ;
        -:  744:    #else
        -:  745:    {
        -:  746:        return _vfprintf_l(stdout, _Format, NULL, _ArgList);
        -:  747:    }
        -:  748:    #endif
        -:  749:
        -:  750:    _Check_return_opt_
        -:  751:    _CRT_STDIO_INLINE int __CRTDECL _vprintf_s_l(
        -:  752:        _In_z_ _Printf_format_string_params_(2) char const* const _Format,
        -:  753:        _In_opt_                                _locale_t   const _Locale,
        -:  754:                                                va_list           _ArgList
        -:  755:        )
        -:  756:    #if defined _NO_CRT_STDIO_INLINE
        -:  757:    ;
        -:  758:    #else
        -:  759:    {
        -:  760:        return _vfprintf_s_l(stdout, _Format, _Locale, _ArgList);
        -:  761:    }
        -:  762:    #endif
        -:  763:
        -:  764:    #if __STDC_WANT_SECURE_LIB__
        -:  765:
        -:  766:        _Check_return_opt_
        -:  767:        _CRT_STDIO_INLINE int __CRTDECL vprintf_s(
        -:  768:            _In_z_ _Printf_format_string_ char const* const _Format,
        -:  769:                                          va_list           _ArgList
        -:  770:            )
        -:  771:    #if defined _NO_CRT_STDIO_INLINE
        -:  772:    ;
        -:  773:    #else
        -:  774:        {
        -:  775:            return _vfprintf_s_l(stdout, _Format, NULL, _ArgList);
        -:  776:        }
        -:  777:    #endif
        -:  778:
        -:  779:    #endif
        -:  780:
        -:  781:    _Check_return_opt_
        -:  782:    _CRT_STDIO_INLINE int __CRTDECL _vprintf_p_l(
        -:  783:        _In_z_ _Printf_format_string_params_(2) char const* const _Format,
        -:  784:        _In_opt_                                _locale_t   const _Locale,
        -:  785:                                                va_list           _ArgList
        -:  786:        )
        -:  787:    #if defined _NO_CRT_STDIO_INLINE
        -:  788:    ;
        -:  789:    #else
        -:  790:    {
        -:  791:        return _vfprintf_p_l(stdout, _Format, _Locale, _ArgList);
        -:  792:    }
        -:  793:    #endif
        -:  794:
        -:  795:    _Check_return_opt_
        -:  796:    _CRT_STDIO_INLINE int __CRTDECL _vprintf_p(
        -:  797:        _In_z_ _Printf_format_string_ char const* const _Format,
        -:  798:                                      va_list           _ArgList
        -:  799:        )
        -:  800:    #if defined _NO_CRT_STDIO_INLINE
        -:  801:    ;
        -:  802:    #else
        -:  803:    {
        -:  804:        return _vfprintf_p_l(stdout, _Format, NULL, _ArgList);
        -:  805:    }
        -:  806:    #endif
        -:  807:
        -:  808:    _Check_return_opt_
        -:  809:    _CRT_STDIO_INLINE int __CRTDECL _fprintf_l(
        -:  810:        _Inout_                                 FILE*       const _Stream,
        -:  811:        _In_z_ _Printf_format_string_params_(0) char const* const _Format,
        -:  812:        _In_opt_                                _locale_t   const _Locale,
        -:  813:        ...)
        -:  814:    #if defined _NO_CRT_STDIO_INLINE
        -:  815:    ;
        -:  816:    #else
        -:  817:    {
        -:  818:        int _Result;
        -:  819:        va_list _ArgList;
        -:  820:        __crt_va_start(_ArgList, _Locale);
        -:  821:        _Result = _vfprintf_l(_Stream, _Format, _Locale, _ArgList);
        -:  822:        __crt_va_end(_ArgList);
        -:  823:        return _Result;
        -:  824:    }
        -:  825:    #endif
        -:  826:
        -:  827:    _Check_return_opt_
        -:  828:    _CRT_STDIO_INLINE int __CRTDECL fprintf(
        -:  829:        _Inout_                       FILE*       const _Stream,
        -:  830:        _In_z_ _Printf_format_string_ char const* const _Format,
        -:  831:        ...)
        -:  832:    #if defined _NO_CRT_STDIO_INLINE
        -:  833:    ;
        -:  834:    #else
        -:  835:    {
        -:  836:        int _Result;
        -:  837:        va_list _ArgList;
        -:  838:        __crt_va_start(_ArgList, _Format);
        -:  839:        _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);
        -:  840:        __crt_va_end(_ArgList);
        -:  841:        return _Result;
        -:  842:    }
        -:  843:    #endif
        -:  844:
        -:  845:    _ACRTIMP int __cdecl _set_printf_count_output(
        -:  846:        _In_ int _Value
        -:  847:        );
        -:  848:
        -:  849:    _ACRTIMP int __cdecl _get_printf_count_output(void);
        -:  850:
        -:  851:    _Check_return_opt_
        -:  852:    _CRT_STDIO_INLINE int __CRTDECL _fprintf_s_l(
        -:  853:        _Inout_                                 FILE*       const _Stream,
        -:  854:        _In_z_ _Printf_format_string_params_(0) char const* const _Format,
        -:  855:        _In_opt_                                _locale_t   const _Locale,
        -:  856:        ...)
        -:  857:    #if defined _NO_CRT_STDIO_INLINE
        -:  858:    ;
        -:  859:    #else
        -:  860:    {
        -:  861:        int _Result;
        -:  862:        va_list _ArgList;
        -:  863:        __crt_va_start(_ArgList, _Locale);
        -:  864:        _Result = _vfprintf_s_l(_Stream, _Format, _Locale, _ArgList);
        -:  865:        __crt_va_end(_ArgList);
        -:  866:        return _Result;
        -:  867:    }
        -:  868:    #endif
        -:  869:
        -:  870:    #if __STDC_WANT_SECURE_LIB__
        -:  871:
        -:  872:        _Check_return_opt_
        -:  873:        _CRT_STDIO_INLINE int __CRTDECL fprintf_s(
        -:  874:            _Inout_                       FILE*       const _Stream,
        -:  875:            _In_z_ _Printf_format_string_ char const* const _Format,
        -:  876:            ...)
        -:  877:    #if defined _NO_CRT_STDIO_INLINE
        -:  878:    ;
        -:  879:    #else
        -:  880:        {
        -:  881:            int _Result;
        -:  882:            va_list _ArgList;
        -:  883:            __crt_va_start(_ArgList, _Format);
        -:  884:            _Result = _vfprintf_s_l(_Stream, _Format, NULL, _ArgList);
        -:  885:            __crt_va_end(_ArgList);
        -:  886:            return _Result;
        -:  887:        }
        -:  888:    #endif
        -:  889:
        -:  890:    #endif
        -:  891:
        -:  892:    _Check_return_opt_
        -:  893:    _CRT_STDIO_INLINE int __CRTDECL _fprintf_p_l(
        -:  894:        _Inout_                                 FILE*       const _Stream,
        -:  895:        _In_z_ _Printf_format_string_params_(0) char const* const _Format,
        -:  896:        _In_opt_                                _locale_t   const _Locale,
        -:  897:        ...)
        -:  898:    #if defined _NO_CRT_STDIO_INLINE
        -:  899:    ;
        -:  900:    #else
        -:  901:    {
        -:  902:        int _Result;
        -:  903:        va_list _ArgList;
        -:  904:        __crt_va_start(_ArgList, _Locale);
        -:  905:        _Result = _vfprintf_p_l(_Stream, _Format, _Locale, _ArgList);
        -:  906:        __crt_va_end(_ArgList);
        -:  907:        return _Result;
        -:  908:    }
        -:  909:    #endif
        -:  910:
        -:  911:    _Check_return_opt_
        -:  912:    _CRT_STDIO_INLINE int __CRTDECL _fprintf_p(
        -:  913:        _Inout_                       FILE*       const _Stream,
        -:  914:        _In_z_ _Printf_format_string_ char const* const _Format,
        -:  915:        ...)
        -:  916:    #if defined _NO_CRT_STDIO_INLINE
        -:  917:    ;
        -:  918:    #else
        -:  919:    {
        -:  920:        int _Result;
        -:  921:        va_list _ArgList;
        -:  922:        __crt_va_start(_ArgList, _Format);
        -:  923:        _Result = _vfprintf_p_l(_Stream, _Format, NULL, _ArgList);
        -:  924:        __crt_va_end(_ArgList);
        -:  925:        return _Result;
        -:  926:    }
        -:  927:    #endif
        -:  928:
        -:  929:    _Check_return_opt_
        -:  930:    _CRT_STDIO_INLINE int __CRTDECL _printf_l(
        -:  931:        _In_z_ _Printf_format_string_params_(0) char const* const _Format,
        -:  932:        _In_opt_                                _locale_t   const _Locale,
        -:  933:        ...)
        -:  934:    #if defined _NO_CRT_STDIO_INLINE
        -:  935:    ;
        -:  936:    #else
        -:  937:    {
        -:  938:        int _Result;
        -:  939:        va_list _ArgList;
        -:  940:        __crt_va_start(_ArgList, _Locale);
        -:  941:        _Result = _vfprintf_l(stdout, _Format, _Locale, _ArgList);
        -:  942:        __crt_va_end(_ArgList);
        -:  943:        return _Result;
        -:  944:    }
        -:  945:    #endif
        -:  946:
        -:  947:    _Check_return_opt_
        4:  948:    _CRT_STDIO_INLINE int __CRTDECL printf(
        -:  949:        _In_z_ _Printf_format_string_ char const* const _Format,
        -:  950:        ...)
        -:  951:    #if defined _NO_CRT_STDIO_INLINE
        -:  952:    ;
        -:  953:    #else
        -:  954:    {
        -:  955:        int _Result;
        -:  956:        va_list _ArgList;
        4:  957:        __crt_va_start(_ArgList, _Format);
        4:  958:        _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);
        4:  959:        __crt_va_end(_ArgList);
        4:  960:        return _Result;
        -:  961:    }
        -:  962:    #endif
        -:  963:
        -:  964:    _Check_return_opt_
        -:  965:    _CRT_STDIO_INLINE int __CRTDECL _printf_s_l(
        -:  966:        _In_z_ _Printf_format_string_params_(0) char const* const _Format,
        -:  967:        _In_opt_                                _locale_t   const _Locale,
        -:  968:        ...)
        -:  969:    #if defined _NO_CRT_STDIO_INLINE
        -:  970:    ;
        -:  971:    #else
        -:  972:    {
        -:  973:        int _Result;
        -:  974:        va_list _ArgList;
        -:  975:        __crt_va_start(_ArgList, _Locale);
        -:  976:        _Result = _vfprintf_s_l(stdout, _Format, _Locale, _ArgList);
        -:  977:        __crt_va_end(_ArgList);
        -:  978:        return _Result;
        -:  979:    }
        -:  980:    #endif
        -:  981:
        -:  982:    #if __STDC_WANT_SECURE_LIB__
        -:  983:
        -:  984:        _Check_return_opt_
        -:  985:        _CRT_STDIO_INLINE int __CRTDECL printf_s(
        -:  986:            _In_z_ _Printf_format_string_ char const* const _Format,
        -:  987:            ...)
        -:  988:    #if defined _NO_CRT_STDIO_INLINE
        -:  989:    ;
        -:  990:    #else
        -:  991:        {
        -:  992:            int _Result;
        -:  993:            va_list _ArgList;
        -:  994:            __crt_va_start(_ArgList, _Format);
        -:  995:            _Result = _vfprintf_s_l(stdout, _Format, NULL, _ArgList);
        -:  996:            __crt_va_end(_ArgList);
        -:  997:            return _Result;
        -:  998:        }
        -:  999:    #endif
        -: 1000:
        -: 1001:    #endif
        -: 1002:
        -: 1003:    _Check_return_opt_
        -: 1004:    _CRT_STDIO_INLINE int __CRTDECL _printf_p_l(
        -: 1005:        _In_z_ _Printf_format_string_params_(0) char const* const _Format,
        -: 1006:        _In_opt_                                _locale_t   const _Locale,
        -: 1007:        ...)
        -: 1008:    #if defined _NO_CRT_STDIO_INLINE
        -: 1009:    ;
        -: 1010:    #else
        -: 1011:    {
        -: 1012:        int _Result;
        -: 1013:        va_list _ArgList;
        -: 1014:        __crt_va_start(_ArgList, _Locale);
        -: 1015:        _Result = _vfprintf_p_l(stdout, _Format, _Locale, _ArgList);
        -: 1016:        __crt_va_end(_ArgList);
        -: 1017:        return _Result;
        -: 1018:    }
        -: 1019:    #endif
        -: 1020:
        -: 1021:    _Check_return_opt_
        -: 1022:    _CRT_STDIO_INLINE int __CRTDECL _printf_p(
        -: 1023:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 1024:        ...)
        -: 1025:    #if defined _NO_CRT_STDIO_INLINE
        -: 1026:    ;
        -: 1027:    #else
        -: 1028:    {
        -: 1029:        int _Result;
        -: 1030:        va_list _ArgList;
        -: 1031:        __crt_va_start(_ArgList, _Format);
        -: 1032:        _Result = _vfprintf_p_l(stdout, _Format, NULL, _ArgList);
        -: 1033:        __crt_va_end(_ArgList);
        -: 1034:        return _Result;
        -: 1035:    }
        -: 1036:    #endif
        -: 1037:
        -: 1038:
        -: 1039:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -: 1040:    //
        -: 1041:    // Narrow Character Formatted Input Functions (Stream)
        -: 1042:    //
        -: 1043:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -: 1044:    _ACRTIMP int __cdecl __stdio_common_vfscanf(
        -: 1045:        _In_                                   unsigned __int64 _Options,
        -: 1046:        _Inout_                                FILE*            _Stream,
        -: 1047:        _In_z_ _Scanf_format_string_params_(2) char const*      _Format,
        -: 1048:        _In_opt_                               _locale_t        _Locale,
        -: 1049:                                               va_list          _Arglist
        -: 1050:        );
        -: 1051:
        -: 1052:    _Check_return_opt_
        6: 1053:    _CRT_STDIO_INLINE int __CRTDECL _vfscanf_l(
        -: 1054:        _Inout_                       FILE*       const _Stream,
        -: 1055:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 1056:        _In_opt_                      _locale_t   const _Locale,
        -: 1057:                                      va_list           _ArgList
        -: 1058:        )
        -: 1059:    #if defined _NO_CRT_STDIO_INLINE
        -: 1060:    ;
        -: 1061:    #else
        -: 1062:    {
        6: 1063:        return __stdio_common_vfscanf(
        6: 1064:            _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
        6: 1065:            _Stream, _Format, _Locale, _ArgList);
        -: 1066:    }
        -: 1067:    #endif
        -: 1068:
        -: 1069:    _Check_return_opt_
        -: 1070:    _CRT_STDIO_INLINE int __CRTDECL vfscanf(
        -: 1071:        _Inout_                       FILE*       const _Stream,
        -: 1072:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 1073:                                      va_list           _ArgList
        -: 1074:        )
        -: 1075:    #if defined _NO_CRT_STDIO_INLINE
        -: 1076:    ;
        -: 1077:    #else
        -: 1078:    {
        -: 1079:        return _vfscanf_l(_Stream, _Format, NULL, _ArgList);
        -: 1080:    }
        -: 1081:    #endif
        -: 1082:
        -: 1083:    _Check_return_opt_
        -: 1084:    _CRT_STDIO_INLINE int __CRTDECL _vfscanf_s_l(
        -: 1085:        _Inout_                       FILE*       const _Stream,
        -: 1086:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 1087:        _In_opt_                      _locale_t   const _Locale,
        -: 1088:                                      va_list           _ArgList
        -: 1089:        )
        -: 1090:    #if defined _NO_CRT_STDIO_INLINE
        -: 1091:    ;
        -: 1092:    #else
        -: 1093:    {
        -: 1094:        return __stdio_common_vfscanf(
        -: 1095:            _CRT_INTERNAL_LOCAL_SCANF_OPTIONS | _CRT_INTERNAL_SCANF_SECURECRT,
        -: 1096:            _Stream, _Format, _Locale, _ArgList);
        -: 1097:    }
        -: 1098:    #endif
        -: 1099:
        -: 1100:
        -: 1101:    #if __STDC_WANT_SECURE_LIB__
        -: 1102:
        -: 1103:        _Check_return_opt_
        -: 1104:        _CRT_STDIO_INLINE int __CRTDECL vfscanf_s(
        -: 1105:            _Inout_                       FILE*       const _Stream,
        -: 1106:            _In_z_ _Printf_format_string_ char const* const _Format,
        -: 1107:                                          va_list           _ArgList
        -: 1108:            )
        -: 1109:    #if defined _NO_CRT_STDIO_INLINE
        -: 1110:    ;
        -: 1111:    #else
        -: 1112:        {
        -: 1113:            return _vfscanf_s_l(_Stream, _Format, NULL, _ArgList);
        -: 1114:        }
        -: 1115:    #endif
        -: 1116:
        -: 1117:    #endif
        -: 1118:
        -: 1119:    _Check_return_opt_
        -: 1120:    _CRT_STDIO_INLINE int __CRTDECL _vscanf_l(
        -: 1121:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 1122:        _In_opt_                      _locale_t   const _Locale,
        -: 1123:                                      va_list           _ArgList
        -: 1124:        )
        -: 1125:    #if defined _NO_CRT_STDIO_INLINE
        -: 1126:    ;
        -: 1127:    #else
        -: 1128:    {
        -: 1129:        return _vfscanf_l(stdin, _Format, _Locale, _ArgList);
        -: 1130:    }
        -: 1131:    #endif
        -: 1132:
        -: 1133:    _Check_return_opt_
        -: 1134:    _CRT_STDIO_INLINE int __CRTDECL vscanf(
        -: 1135:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 1136:                                      va_list           _ArgList
        -: 1137:        )
        -: 1138:    #if defined _NO_CRT_STDIO_INLINE
        -: 1139:    ;
        -: 1140:    #else
        -: 1141:    {
        -: 1142:        return _vfscanf_l(stdin, _Format, NULL, _ArgList);
        -: 1143:    }
        -: 1144:    #endif
        -: 1145:
        -: 1146:    _Check_return_opt_
        -: 1147:    _CRT_STDIO_INLINE int __CRTDECL _vscanf_s_l(
        -: 1148:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 1149:        _In_opt_                      _locale_t   const _Locale,
        -: 1150:                                      va_list           _ArgList
        -: 1151:        )
        -: 1152:    #if defined _NO_CRT_STDIO_INLINE
        -: 1153:    ;
        -: 1154:    #else
        -: 1155:    {
        -: 1156:        return _vfscanf_s_l(stdin, _Format, _Locale, _ArgList);
        -: 1157:    }
        -: 1158:    #endif
        -: 1159:
        -: 1160:    #if __STDC_WANT_SECURE_LIB__
        -: 1161:
        -: 1162:        _Check_return_opt_
        -: 1163:        _CRT_STDIO_INLINE int __CRTDECL vscanf_s(
        -: 1164:            _In_z_ _Printf_format_string_ char const* const _Format,
        -: 1165:                                          va_list           _ArgList
        -: 1166:            )
        -: 1167:    #if defined _NO_CRT_STDIO_INLINE
        -: 1168:    ;
        -: 1169:    #else
        -: 1170:        {
        -: 1171:            return _vfscanf_s_l(stdin, _Format, NULL, _ArgList);
        -: 1172:        }
        -: 1173:    #endif
        -: 1174:
        -: 1175:    #endif
        -: 1176:
        -: 1177:    _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_fscanf_s_l)
        -: 1178:    _CRT_STDIO_INLINE int __CRTDECL _fscanf_l(
        -: 1179:        _Inout_                                FILE*       const _Stream,
        -: 1180:        _In_z_ _Scanf_format_string_params_(0) char const* const _Format,
        -: 1181:        _In_opt_                               _locale_t   const _Locale,
        -: 1182:        ...)
        -: 1183:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 1184:        ;
        -: 1185:    #else
        -: 1186:    {
        -: 1187:        int _Result;
        -: 1188:        va_list _ArgList;
        -: 1189:        __crt_va_start(_ArgList, _Locale);
        -: 1190:        _Result = _vfscanf_l(_Stream, _Format, _Locale, _ArgList);
        -: 1191:        __crt_va_end(_ArgList);
        -: 1192:        return _Result;
        -: 1193:    }
        -: 1194:    #endif
        -: 1195:
        -: 1196:    _Check_return_ _CRT_INSECURE_DEPRECATE(fscanf_s)
        -: 1197:    _CRT_STDIO_INLINE int __CRTDECL fscanf(
        -: 1198:        _Inout_                      FILE*       const _Stream,
        -: 1199:        _In_z_ _Scanf_format_string_ char const* const _Format,
        -: 1200:        ...)
        -: 1201:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 1202:        ;
        -: 1203:    #else
        -: 1204:    {
        -: 1205:        int _Result;
        -: 1206:        va_list _ArgList;
        -: 1207:        __crt_va_start(_ArgList, _Format);
        -: 1208:        _Result = _vfscanf_l(_Stream, _Format, NULL, _ArgList);
        -: 1209:        __crt_va_end(_ArgList);
        -: 1210:        return _Result;
        -: 1211:    }
        -: 1212:    #endif
        -: 1213:
        -: 1214:    _Check_return_opt_
        -: 1215:    _CRT_STDIO_INLINE int __CRTDECL _fscanf_s_l(
        -: 1216:        _Inout_                                  FILE*       const _Stream,
        -: 1217:        _In_z_ _Scanf_s_format_string_params_(0) char const* const _Format,
        -: 1218:        _In_opt_                                 _locale_t   const _Locale,
        -: 1219:        ...)
        -: 1220:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 1221:        ;
        -: 1222:    #else
        -: 1223:    {
        -: 1224:        int _Result;
        -: 1225:        va_list _ArgList;
        -: 1226:        __crt_va_start(_ArgList, _Locale);
        -: 1227:        _Result = _vfscanf_s_l(_Stream, _Format, _Locale, _ArgList);
        -: 1228:        __crt_va_end(_ArgList);
        -: 1229:        return _Result;
        -: 1230:    }
        -: 1231:    #endif
        -: 1232:
        -: 1233:    #if __STDC_WANT_SECURE_LIB__
        -: 1234:
        -: 1235:        _Check_return_opt_
        -: 1236:        _CRT_STDIO_INLINE int __CRTDECL fscanf_s(
        -: 1237:            _Inout_                        FILE*       const _Stream,
        -: 1238:            _In_z_ _Scanf_s_format_string_ char const* const _Format,
        -: 1239:            ...)
        -: 1240:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 1241:        ;
        -: 1242:    #else
        -: 1243:        {
        -: 1244:            int _Result;
        -: 1245:            va_list _ArgList;
        -: 1246:            __crt_va_start(_ArgList, _Format);
        -: 1247:            _Result = _vfscanf_s_l(_Stream, _Format, NULL, _ArgList);
        -: 1248:            __crt_va_end(_ArgList);
        -: 1249:            return _Result;
        -: 1250:        }
        -: 1251:    #endif
        -: 1252:
        -: 1253:    #endif
        -: 1254:
        -: 1255:    _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_scanf_s_l)
        -: 1256:    _CRT_STDIO_INLINE int __CRTDECL _scanf_l(
        -: 1257:        _In_z_ _Scanf_format_string_params_(0) char const* const _Format,
        -: 1258:        _In_opt_                               _locale_t   const _Locale,
        -: 1259:        ...)
        -: 1260:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 1261:        ;
        -: 1262:    #else
        -: 1263:    {
        -: 1264:        int _Result;
        -: 1265:        va_list _ArgList;
        -: 1266:        __crt_va_start(_ArgList, _Locale);
        -: 1267:        _Result = _vfscanf_l(stdin, _Format, _Locale, _ArgList);
        -: 1268:        __crt_va_end(_ArgList);
        -: 1269:        return _Result;
        -: 1270:    }
        -: 1271:    #endif
        -: 1272:
        -: 1273:    _Check_return_ _CRT_INSECURE_DEPRECATE(scanf_s)
        6: 1274:    _CRT_STDIO_INLINE int __CRTDECL scanf(
        -: 1275:        _In_z_ _Scanf_format_string_ char const* const _Format,
        -: 1276:        ...)
        -: 1277:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 1278:        ;
        -: 1279:    #else
        -: 1280:    {
        -: 1281:        int _Result;
        -: 1282:        va_list _ArgList;
        6: 1283:        __crt_va_start(_ArgList, _Format);
        6: 1284:        _Result = _vfscanf_l(stdin, _Format, NULL, _ArgList);
        6: 1285:        __crt_va_end(_ArgList);
        6: 1286:        return _Result;
        -: 1287:    }
        -: 1288:    #endif
        -: 1289:
        -: 1290:    _Check_return_opt_
        -: 1291:    _CRT_STDIO_INLINE int __CRTDECL _scanf_s_l(
        -: 1292:        _In_z_ _Scanf_s_format_string_params_(0) char const* const _Format,
        -: 1293:        _In_opt_                                 _locale_t   const _Locale,
        -: 1294:        ...)
        -: 1295:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 1296:        ;
        -: 1297:    #else
        -: 1298:    {
        -: 1299:        int _Result;
        -: 1300:        va_list _ArgList;
        -: 1301:        __crt_va_start(_ArgList, _Locale);
        -: 1302:        _Result = _vfscanf_s_l(stdin, _Format, _Locale, _ArgList);
        -: 1303:        __crt_va_end(_ArgList);
        -: 1304:        return _Result;
        -: 1305:    }
        -: 1306:    #endif
        -: 1307:
        -: 1308:    #if __STDC_WANT_SECURE_LIB__
        -: 1309:
        -: 1310:        _Check_return_opt_
        -: 1311:        _CRT_STDIO_INLINE int __CRTDECL scanf_s(
        -: 1312:            _In_z_ _Scanf_s_format_string_ char const* const _Format,
        -: 1313:            ...)
        -: 1314:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 1315:        ;
        -: 1316:    #else
        -: 1317:        {
        -: 1318:            int _Result;
        -: 1319:            va_list _ArgList;
        -: 1320:            __crt_va_start(_ArgList, _Format);
        -: 1321:            _Result = _vfscanf_s_l(stdin, _Format, NULL, _ArgList);
        -: 1322:            __crt_va_end(_ArgList);
        -: 1323:            return _Result;
        -: 1324:        }
        -: 1325:    #endif
        -: 1326:
        -: 1327:    #endif
        -: 1328:
        -: 1329:
        -: 1330:
        -: 1331:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -: 1332:    //
        -: 1333:    // Narrow Character Formatted Output Functions (String)
        -: 1334:    //
        -: 1335:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -: 1336:    _Success_(return >= 0)
        -: 1337:    _ACRTIMP int __cdecl __stdio_common_vsprintf(
        -: 1338:        _In_                                    unsigned __int64 _Options,
        -: 1339:        _Out_writes_opt_z_(_BufferCount)        char*            _Buffer,
        -: 1340:        _In_                                    size_t           _BufferCount,
        -: 1341:        _In_z_ _Printf_format_string_params_(2) char const*      _Format,
        -: 1342:        _In_opt_                                _locale_t        _Locale,
        -: 1343:                                                va_list          _ArgList
        -: 1344:        );
        -: 1345:
        -: 1346:    _Success_(return >= 0)
        -: 1347:    _ACRTIMP int __cdecl __stdio_common_vsprintf_s(
        -: 1348:        _In_                                    unsigned __int64 _Options,
        -: 1349:        _Out_writes_z_(_BufferCount)            char*            _Buffer,
        -: 1350:        _In_                                    size_t           _BufferCount,
        -: 1351:        _In_z_ _Printf_format_string_params_(2) char const*      _Format,
        -: 1352:        _In_opt_                                _locale_t        _Locale,
        -: 1353:                                                va_list          _ArgList
        -: 1354:        );
        -: 1355:
        -: 1356:    _Success_(return >= 0)
        -: 1357:    _ACRTIMP int __cdecl __stdio_common_vsnprintf_s(
        -: 1358:        _In_                                    unsigned __int64 _Options,
        -: 1359:        _Out_writes_opt_z_(_BufferCount)        char*            _Buffer,
        -: 1360:        _In_                                    size_t           _BufferCount,
        -: 1361:        _In_                                    size_t           _MaxCount,
        -: 1362:        _In_z_ _Printf_format_string_params_(2) char const*      _Format,
        -: 1363:        _In_opt_                                _locale_t        _Locale,
        -: 1364:                                                va_list          _ArgList
        -: 1365:        );
        -: 1366:
        -: 1367:    _Success_(return >= 0)
        -: 1368:    _ACRTIMP int __cdecl __stdio_common_vsprintf_p(
        -: 1369:        _In_                                    unsigned __int64 _Options,
        -: 1370:        _Out_writes_z_(_BufferCount)            char*            _Buffer,
        -: 1371:        _In_                                    size_t           _BufferCount,
        -: 1372:        _In_z_ _Printf_format_string_params_(2) char const*      _Format,
        -: 1373:        _In_opt_                                _locale_t        _Locale,
        -: 1374:                                                va_list          _ArgList
        -: 1375:        );
        -: 1376:
        -: 1377:    _Success_(return >= 0)
        -: 1378:    _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_vsnprintf_s_l)
    #####: 1379:    _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_l(
        -: 1380:        _Out_writes_opt_(_BufferCount) _Post_maybez_ char*       const _Buffer,
        -: 1381:        _In_                                         size_t      const _BufferCount,
        -: 1382:        _In_z_ _Printf_format_string_params_(2)      char const* const _Format,
        -: 1383:        _In_opt_                                     _locale_t   const _Locale,
        -: 1384:                                                     va_list           _ArgList
        -: 1385:        )
        -: 1386:    #if defined _NO_CRT_STDIO_INLINE
        -: 1387:    ;
        -: 1388:    #else
        -: 1389:    {
    #####: 1390:        int const _Result = __stdio_common_vsprintf(
    #####: 1391:            _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
    #####: 1392:            _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        -: 1393:
    #####: 1394:        return _Result < 0 ? -1 : _Result;
        -: 1395:    }
        -: 1396:    #endif
        -: 1397:
        -: 1398:    _Success_(return >= 0)
        -: 1399:    _Check_return_opt_
    #####: 1400:    _CRT_STDIO_INLINE int __CRTDECL _vsnprintf(
        -: 1401:        _Out_writes_opt_(_BufferCount) _Post_maybez_ char*       const _Buffer,
        -: 1402:        _In_                                        size_t      const _BufferCount,
        -: 1403:        _In_z_ _Printf_format_string_               char const* const _Format,
        -: 1404:                                                    va_list           _ArgList
        -: 1405:        )
        -: 1406:    #if defined _NO_CRT_STDIO_INLINE
        -: 1407:    ;
        -: 1408:    #else
        -: 1409:    {
        -: 1410:        #pragma warning(push)
        -: 1411:        #pragma warning(disable: 4996) // Deprecation
    #####: 1412:        return _vsnprintf_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
        -: 1413:        #pragma warning(pop)
        -: 1414:    }
        -: 1415:    #endif
        -: 1416:
        -: 1417:    #if defined vsnprintf
        -: 1418:        // This definition of vsnprintf will generate "warning C4005: 'vsnprintf': macro
        -: 1419:        // redefinition" with a subsequent line indicating where the previous definition
        -: 1420:        // of vsnprintf was.  This makes it easier to find where vsnprintf was defined.
        -: 1421:        #pragma warning(push, 1)
        -: 1422:        #pragma warning(1: 4005)
        -: 1423:        #define vsnprintf Do not define vsnprintf as a macro
        -: 1424:        #pragma warning(pop)
        -: 1425:        #error Macro definition of vsnprintf conflicts with Standard Library function declaration
        -: 1426:    #endif
        -: 1427:
        -: 1428:    _Success_(return >= 0)
        -: 1429:    _Check_return_opt_
        -: 1430:    _CRT_STDIO_INLINE int __CRTDECL vsnprintf(
        -: 1431:        _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1432:        _In_                                              size_t      const _BufferCount,
        -: 1433:        _In_z_ _Printf_format_string_                     char const* const _Format,
        -: 1434:                                                          va_list           _ArgList
        -: 1435:        )
        -: 1436:    #if defined _NO_CRT_STDIO_INLINE
        -: 1437:    ;
        -: 1438:    #else
        -: 1439:    {
        -: 1440:        int const _Result = __stdio_common_vsprintf(
        -: 1441:            _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
        -: 1442:            _Buffer, _BufferCount, _Format, NULL, _ArgList);
        -: 1443:
        -: 1444:        return _Result < 0 ? -1 : _Result;
        -: 1445:    }
        -: 1446:    #endif
        -: 1447:
        -: 1448:    _Success_(return >= 0)
        -: 1449:    _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_vsprintf_s_l)
    #####: 1450:    _CRT_STDIO_INLINE int __CRTDECL _vsprintf_l(
        -: 1451:        _Pre_notnull_ _Always_(_Post_z_) char*       const _Buffer,
        -: 1452:        _In_z_                           char const* const _Format,
        -: 1453:        _In_opt_                         _locale_t   const _Locale,
        -: 1454:                                         va_list           _ArgList
        -: 1455:        )
        -: 1456:    #if defined _NO_CRT_STDIO_INLINE
        -: 1457:    ;
        -: 1458:    #else
        -: 1459:    {
        -: 1460:        #pragma warning(push)
        -: 1461:        #pragma warning(disable: 4996) // Deprecation
    #####: 1462:        return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);
        -: 1463:        #pragma warning(pop)
        -: 1464:    }
        -: 1465:    #endif
        -: 1466:
        -: 1467:    _Success_(return >= 0)
        -: 1468:    _Check_return_opt_ _CRT_INSECURE_DEPRECATE(vsprintf_s)
    #####: 1469:    _CRT_STDIO_INLINE int __CRTDECL vsprintf(
        -: 1470:        _Pre_notnull_ _Always_(_Post_z_) char*       const _Buffer,
        -: 1471:        _In_z_ _Printf_format_string_    char const* const _Format,
        -: 1472:                                         va_list           _ArgList
        -: 1473:        )
        -: 1474:    #if defined _NO_CRT_STDIO_INLINE
        -: 1475:    ;
        -: 1476:    #else
        -: 1477:    {
        -: 1478:        #pragma warning(push)
        -: 1479:        #pragma warning(disable: 4996) // Deprecation
    #####: 1480:        return _vsnprintf_l(_Buffer, (size_t)-1, _Format, NULL, _ArgList);
        -: 1481:        #pragma warning(pop)
        -: 1482:    }
        -: 1483:    #endif
        -: 1484:
        -: 1485:    _Success_(return >= 0)
        -: 1486:    _Check_return_opt_
        -: 1487:    _CRT_STDIO_INLINE int __CRTDECL _vsprintf_s_l(
        -: 1488:        _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1489:        _In_                                          size_t      const _BufferCount,
        -: 1490:        _In_z_ _Printf_format_string_params_(2)       char const* const _Format,
        -: 1491:        _In_opt_                                      _locale_t   const _Locale,
        -: 1492:                                                      va_list           _ArgList
        -: 1493:        )
        -: 1494:    #if defined _NO_CRT_STDIO_INLINE
        -: 1495:    ;
        -: 1496:    #else
        -: 1497:    {
        -: 1498:        int const _Result = __stdio_common_vsprintf_s(
        -: 1499:            _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
        -: 1500:            _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        -: 1501:
        -: 1502:        return _Result < 0 ? -1 : _Result;
        -: 1503:    }
        -: 1504:    #endif
        -: 1505:
        -: 1506:    #if __STDC_WANT_SECURE_LIB__
        -: 1507:
        -: 1508:        _Success_(return >= 0)
        -: 1509:        _Check_return_opt_
        -: 1510:        _CRT_STDIO_INLINE int __CRTDECL vsprintf_s(
        -: 1511:            _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1512:            _In_                                          size_t      const _BufferCount,
        -: 1513:            _In_z_ _Printf_format_string_                 char const* const _Format,
        -: 1514:                                                          va_list           _ArgList
        -: 1515:            )
        -: 1516:    #if defined _NO_CRT_STDIO_INLINE
        -: 1517:    ;
        -: 1518:    #else
        -: 1519:        {
        -: 1520:            return _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
        -: 1521:        }
        -: 1522:    #endif
        -: 1523:
        -: 1524:        __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2(
        -: 1525:            _Success_(return >= 0)
        -: 1526:            int, vsprintf_s,
        -: 1527:            _Always_(_Post_z_)            char,        _Buffer,
        -: 1528:            _In_z_ _Printf_format_string_ char const*, _Format,
        -: 1529:                                          va_list,     _ArgList
        -: 1530:            )
        -: 1531:
        -: 1532:    #endif
        -: 1533:
        -: 1534:    _Success_(return >= 0)
        -: 1535:    _Check_return_opt_
        -: 1536:    _CRT_STDIO_INLINE int __CRTDECL _vsprintf_p_l(
        -: 1537:        _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1538:        _In_                                          size_t      const _BufferCount,
        -: 1539:        _In_z_ _Printf_format_string_params_(2)       char const* const _Format,
        -: 1540:        _In_opt_                                      _locale_t   const _Locale,
        -: 1541:                                                      va_list           _ArgList
        -: 1542:        )
        -: 1543:    #if defined _NO_CRT_STDIO_INLINE
        -: 1544:    ;
        -: 1545:    #else
        -: 1546:    {
        -: 1547:        int const _Result = __stdio_common_vsprintf_p(
        -: 1548:            _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
        -: 1549:            _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        -: 1550:
        -: 1551:        return _Result < 0 ? -1 : _Result;
        -: 1552:    }
        -: 1553:    #endif
        -: 1554:
        -: 1555:    _Success_(return >= 0)
        -: 1556:    _Check_return_opt_
        -: 1557:    _CRT_STDIO_INLINE int __CRTDECL _vsprintf_p(
        -: 1558:        _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1559:        _In_                                          size_t      const _BufferCount,
        -: 1560:        _In_z_ _Printf_format_string_                 char const* const _Format,
        -: 1561:                                                      va_list           _ArgList
        -: 1562:        )
        -: 1563:    #if defined _NO_CRT_STDIO_INLINE
        -: 1564:    ;
        -: 1565:    #else
        -: 1566:    {
        -: 1567:        return _vsprintf_p_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
        -: 1568:    }
        -: 1569:    #endif
        -: 1570:
        -: 1571:    _Success_(return >= 0)
        -: 1572:    _Check_return_opt_
        -: 1573:    _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_s_l(
        -: 1574:        _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1575:        _In_                                              size_t      const _BufferCount,
        -: 1576:        _In_                                              size_t      const _MaxCount,
        -: 1577:        _In_z_ _Printf_format_string_params_(2)           char const* const _Format,
        -: 1578:        _In_opt_                                          _locale_t   const _Locale,
        -: 1579:                                                          va_list          _ArgList
        -: 1580:        )
        -: 1581:    #if defined _NO_CRT_STDIO_INLINE
        -: 1582:    ;
        -: 1583:    #else
        -: 1584:    {
        -: 1585:        int const _Result = __stdio_common_vsnprintf_s(
        -: 1586:            _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
        -: 1587:            _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        -: 1588:
        -: 1589:        return _Result < 0 ? -1 : _Result;
        -: 1590:    }
        -: 1591:    #endif
        -: 1592:
        -: 1593:    _Success_(return >= 0)
        -: 1594:    _Check_return_opt_
        -: 1595:    _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_s(
        -: 1596:        _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1597:        _In_                                              size_t      const _BufferCount,
        -: 1598:        _In_                                              size_t      const _MaxCount,
        -: 1599:        _In_z_ _Printf_format_string_                     char const* const _Format,
        -: 1600:                                                          va_list           _ArgList
        -: 1601:        )
        -: 1602:    #if defined _NO_CRT_STDIO_INLINE
        -: 1603:    ;
        -: 1604:    #else
        -: 1605:    {
        -: 1606:        return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);
        -: 1607:    }
        -: 1608:    #endif
        -: 1609:
        -: 1610:    __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(
        -: 1611:        _Success_(return >= 0)
        -: 1612:        int, _vsnprintf_s,
        -: 1613:        _Always_(_Post_z_)            char,        _Buffer,
        -: 1614:        _In_                          size_t,      _BufferCount,
        -: 1615:        _In_z_ _Printf_format_string_ char const*, _Format,
        -: 1616:                                      va_list,     _ArgList
        -: 1617:        )
        -: 1618:
        -: 1619:    #if __STDC_WANT_SECURE_LIB__
        -: 1620:
        -: 1621:        _Success_(return >= 0)
        -: 1622:        _Check_return_opt_
        -: 1623:        _CRT_STDIO_INLINE int __CRTDECL vsnprintf_s(
        -: 1624:            _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1625:            _In_                                              size_t      const _BufferCount,
        -: 1626:            _In_                                              size_t      const _MaxCount,
        -: 1627:            _In_z_ _Printf_format_string_                     char const* const _Format,
        -: 1628:                                                              va_list           _ArgList
        -: 1629:            )
        -: 1630:    #if defined _NO_CRT_STDIO_INLINE
        -: 1631:    ;
        -: 1632:    #else
        -: 1633:        {
        -: 1634:            return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);
        -: 1635:        }
        -: 1636:    #endif
        -: 1637:
        -: 1638:        __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(
        -: 1639:            _Success_(return >= 0)
        -: 1640:            int, vsnprintf_s,
        -: 1641:            _Always_(_Post_z_)            char,        _Buffer,
        -: 1642:            _In_                          size_t,      _BufferCount,
        -: 1643:            _In_z_ _Printf_format_string_ char const*, _Format,
        -: 1644:                                          va_list,     _ArgList
        -: 1645:            )
        -: 1646:
        -: 1647:    #endif
        -: 1648:
        -: 1649:    _Check_return_opt_
        -: 1650:    _CRT_STDIO_INLINE int __CRTDECL _vscprintf_l(
        -: 1651:        _In_z_ _Printf_format_string_params_(2) char const* const _Format,
        -: 1652:        _In_opt_                                _locale_t   const _Locale,
        -: 1653:                                                va_list           _ArgList
        -: 1654:        )
        -: 1655:    #if defined _NO_CRT_STDIO_INLINE
        -: 1656:    ;
        -: 1657:    #else
        -: 1658:    {
        -: 1659:        int const _Result = __stdio_common_vsprintf(
        -: 1660:            _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
        -: 1661:            NULL, 0, _Format, _Locale, _ArgList);
        -: 1662:
        -: 1663:        return _Result < 0 ? -1 : _Result;
        -: 1664:    }
        -: 1665:    #endif
        -: 1666:
        -: 1667:    _Check_return_
        -: 1668:    _CRT_STDIO_INLINE int __CRTDECL _vscprintf(
        -: 1669:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 1670:                                      va_list           _ArgList
        -: 1671:        )
        -: 1672:    #if defined _NO_CRT_STDIO_INLINE
        -: 1673:    ;
        -: 1674:    #else
        -: 1675:    {
        -: 1676:        return _vscprintf_l(_Format, NULL, _ArgList);
        -: 1677:    }
        -: 1678:    #endif
        -: 1679:
        -: 1680:    _Check_return_opt_
        -: 1681:    _CRT_STDIO_INLINE int __CRTDECL _vscprintf_p_l(
        -: 1682:        _In_z_ _Printf_format_string_params_(2) char const* const _Format,
        -: 1683:        _In_opt_                                _locale_t   const _Locale,
        -: 1684:                                                va_list           _ArgList
        -: 1685:        )
        -: 1686:    #if defined _NO_CRT_STDIO_INLINE
        -: 1687:    ;
        -: 1688:    #else
        -: 1689:    {
        -: 1690:        int const _Result = __stdio_common_vsprintf_p(
        -: 1691:            _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
        -: 1692:            NULL, 0, _Format, _Locale, _ArgList);
        -: 1693:
        -: 1694:        return _Result < 0 ? -1 : _Result;
        -: 1695:    }
        -: 1696:    #endif
        -: 1697:
        -: 1698:    _Check_return_
        -: 1699:    _CRT_STDIO_INLINE int __CRTDECL _vscprintf_p(
        -: 1700:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 1701:                                      va_list           _ArgList
        -: 1702:        )
        -: 1703:    #if defined _NO_CRT_STDIO_INLINE
        -: 1704:    ;
        -: 1705:    #else
        -: 1706:    {
        -: 1707:        return _vscprintf_p_l(_Format, NULL, _ArgList);
        -: 1708:    }
        -: 1709:    #endif
        -: 1710:
        -: 1711:    _Check_return_opt_
        -: 1712:    _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_c_l(
        -: 1713:        _Out_writes_opt_(_BufferCount)          char*       const _Buffer,
        -: 1714:        _In_                                    size_t      const _BufferCount,
        -: 1715:        _In_z_ _Printf_format_string_params_(2) char const* const _Format,
        -: 1716:        _In_opt_                                _locale_t   const _Locale,
        -: 1717:                                                va_list           _ArgList
        -: 1718:        )
        -: 1719:    #if defined _NO_CRT_STDIO_INLINE
        -: 1720:    ;
        -: 1721:    #else
        -: 1722:    {
        -: 1723:        int const _Result = __stdio_common_vsprintf(
        -: 1724:            _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
        -: 1725:            _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        -: 1726:
        -: 1727:        return _Result < 0 ? -1 : _Result;
        -: 1728:    }
        -: 1729:    #endif
        -: 1730:
        -: 1731:    _Success_(return >= 0)
        -: 1732:    _Check_return_opt_
        -: 1733:    _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_c(
        -: 1734:        _Out_writes_opt_(_BufferCount) char*       const _Buffer,
        -: 1735:        _In_                           size_t      const _BufferCount,
        -: 1736:        _In_z_ _Printf_format_string_  char const* const _Format,
        -: 1737:                                       va_list           _ArgList
        -: 1738:        )
        -: 1739:    #if defined _NO_CRT_STDIO_INLINE
        -: 1740:    ;
        -: 1741:    #else
        -: 1742:    {
        -: 1743:        return _vsnprintf_c_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
        -: 1744:    }
        -: 1745:    #endif
        -: 1746:
        -: 1747:    _Success_(return >= 0)
        -: 1748:    _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_sprintf_s_l)
        -: 1749:    _CRT_STDIO_INLINE int __CRTDECL _sprintf_l(
        -: 1750:        _Pre_notnull_ _Always_(_Post_z_)        char*       const _Buffer,
        -: 1751:        _In_z_ _Printf_format_string_params_(0) char const* const _Format,
        -: 1752:        _In_opt_                                _locale_t   const _Locale,
        -: 1753:        ...)
        -: 1754:    #if defined _NO_CRT_STDIO_INLINE
        -: 1755:    ;
        -: 1756:    #else
        -: 1757:    {
        -: 1758:        int _Result;
        -: 1759:        va_list _ArgList;
        -: 1760:        __crt_va_start(_ArgList, _Locale);
        -: 1761:
        -: 1762:        #pragma warning(push)
        -: 1763:        #pragma warning(disable: 4996) // Deprecation
        -: 1764:        _Result = _vsprintf_l(_Buffer, _Format, _Locale, _ArgList);
        -: 1765:        #pragma warning(pop)
        -: 1766:
        -: 1767:        __crt_va_end(_ArgList);
        -: 1768:        return _Result;
        -: 1769:    }
        -: 1770:    #endif
        -: 1771:
        -: 1772:    _Success_(return >= 0)
        -: 1773:    _Check_return_opt_
    #####: 1774:    _CRT_STDIO_INLINE int __CRTDECL sprintf(
        -: 1775:        _Pre_notnull_ _Always_(_Post_z_) char*       const _Buffer,
        -: 1776:        _In_z_ _Printf_format_string_    char const* const _Format,
        -: 1777:        ...)
        -: 1778:    #if defined _NO_CRT_STDIO_INLINE
        -: 1779:    ;
        -: 1780:    #else
        -: 1781:    {
        -: 1782:        int _Result;
        -: 1783:        va_list _ArgList;
    #####: 1784:        __crt_va_start(_ArgList, _Format);
        -: 1785:
        -: 1786:        #pragma warning(push)
        -: 1787:        #pragma warning(disable: 4996) // Deprecation
    #####: 1788:        _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
        -: 1789:        #pragma warning(pop)
        -: 1790:
    #####: 1791:        __crt_va_end(_ArgList);
    #####: 1792:        return _Result;
        -: 1793:    }
        -: 1794:    #endif
        -: 1795:
        -: 1796:    #pragma warning(push)
        -: 1797:    #pragma warning(disable: 4996)
        -: 1798:    #pragma warning(disable: 28719) // __WARNING_BANNED_API_USAGE
        -: 1799:    #pragma warning(disable: 28726) // __WARNING_BANNED_API_USAGEL2
        -: 1800:    __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_ARGLIST(
        -: 1801:        _Success_(return >= 0)
        -: 1802:        int, __RETURN_POLICY_SAME, __EMPTY_DECLSPEC, __CRTDECL, sprintf, vsprintf,
        -: 1803:        _Pre_notnull_ _Always_(_Post_z_), char,        _Buffer,
        -: 1804:        _In_z_ _Printf_format_string_     char const*, _Format
        -: 1805:        )
        -: 1806:    #pragma warning(pop)
        -: 1807:
        -: 1808:    _Success_(return >= 0)
        -: 1809:    _Check_return_opt_
        -: 1810:    _CRT_STDIO_INLINE int __CRTDECL _sprintf_s_l(
        -: 1811:        _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1812:        _In_                                          size_t      const _BufferCount,
        -: 1813:        _In_z_ _Printf_format_string_params_(0)       char const* const _Format,
        -: 1814:        _In_opt_                                      _locale_t   const _Locale,
        -: 1815:        ...)
        -: 1816:    #if defined _NO_CRT_STDIO_INLINE
        -: 1817:    ;
        -: 1818:    #else
        -: 1819:    {
        -: 1820:        int _Result;
        -: 1821:        va_list _ArgList;
        -: 1822:        __crt_va_start(_ArgList, _Locale);
        -: 1823:        _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        -: 1824:        __crt_va_end(_ArgList);
        -: 1825:        return _Result;
        -: 1826:    }
        -: 1827:    #endif
        -: 1828:
        -: 1829:    #if __STDC_WANT_SECURE_LIB__
        -: 1830:
        -: 1831:        _Success_(return >= 0)
        -: 1832:        _Check_return_opt_
        -: 1833:        _CRT_STDIO_INLINE int __CRTDECL sprintf_s(
        -: 1834:            _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1835:            _In_                                          size_t      const _BufferCount,
        -: 1836:            _In_z_ _Printf_format_string_                 char const* const _Format,
        -: 1837:            ...)
        -: 1838:    #if defined _NO_CRT_STDIO_INLINE
        -: 1839:    ;
        -: 1840:    #else
        -: 1841:        {
        -: 1842:            int _Result;
        -: 1843:            va_list _ArgList;
        -: 1844:            __crt_va_start(_ArgList, _Format);
        -: 1845:            _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
        -: 1846:            __crt_va_end(_ArgList);
        -: 1847:            return _Result;
        -: 1848:        }
        -: 1849:    #endif
        -: 1850:
        -: 1851:    #endif
        -: 1852:
        -: 1853:    __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(
        -: 1854:        _Success_(return >= 0)
        -: 1855:        int, sprintf_s, vsprintf_s,
        -: 1856:        _Always_(_Post_z_)            char,        _Buffer,
        -: 1857:        _In_z_ _Printf_format_string_ char const*, _Format
        -: 1858:        )
        -: 1859:
        -: 1860:    _Success_(return >= 0)
        -: 1861:    _Check_return_opt_
        -: 1862:    _CRT_STDIO_INLINE int __CRTDECL _sprintf_p_l(
        -: 1863:        _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1864:        _In_                                          size_t      const _BufferCount,
        -: 1865:        _In_z_ _Printf_format_string_params_(0)       char const* const _Format,
        -: 1866:        _In_opt_                                      _locale_t   const _Locale,
        -: 1867:        ...)
        -: 1868:    #if defined _NO_CRT_STDIO_INLINE
        -: 1869:    ;
        -: 1870:    #else
        -: 1871:    {
        -: 1872:        int _Result;
        -: 1873:        va_list _ArgList;
        -: 1874:        __crt_va_start(_ArgList, _Locale);
        -: 1875:        _Result = _vsprintf_p_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        -: 1876:        __crt_va_end(_ArgList);
        -: 1877:        return _Result;
        -: 1878:    }
        -: 1879:    #endif
        -: 1880:
        -: 1881:    _Success_(return >= 0)
        -: 1882:    _Check_return_opt_
        -: 1883:    _CRT_STDIO_INLINE int __CRTDECL _sprintf_p(
        -: 1884:        _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1885:        _In_                                          size_t      const _BufferCount,
        -: 1886:        _In_z_ _Printf_format_string_                 char const* const _Format,
        -: 1887:        ...)
        -: 1888:    #if defined _NO_CRT_STDIO_INLINE
        -: 1889:    ;
        -: 1890:    #else
        -: 1891:    {
        -: 1892:        int _Result;
        -: 1893:        va_list _ArgList;
        -: 1894:        __crt_va_start(_ArgList, _Format);
        -: 1895:        _Result = _vsprintf_p_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
        -: 1896:        __crt_va_end(_ArgList);
        -: 1897:        return _Result;
        -: 1898:    }
        -: 1899:    #endif
        -: 1900:
        -: 1901:    _Success_(return >= 0)
        -: 1902:    _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_snprintf_s_l)
        -: 1903:    _CRT_STDIO_INLINE int __CRTDECL _snprintf_l(
        -: 1904:        _Out_writes_opt_(_BufferCount) _Post_maybez_ char*       const _Buffer,
        -: 1905:        _In_                                         size_t      const _BufferCount,
        -: 1906:        _In_z_ _Printf_format_string_params_(0)      char const* const _Format,
        -: 1907:        _In_opt_                                     _locale_t   const _Locale,
        -: 1908:        ...)
        -: 1909:    #if defined _NO_CRT_STDIO_INLINE
        -: 1910:    ;
        -: 1911:    #else
        -: 1912:    {
        -: 1913:        int _Result;
        -: 1914:        va_list _ArgList;
        -: 1915:        __crt_va_start(_ArgList, _Locale);
        -: 1916:
        -: 1917:        #pragma warning(push)
        -: 1918:        #pragma warning(disable: 4996) // Deprecation
        -: 1919:        _Result = _vsnprintf_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        -: 1920:        #pragma warning(pop)
        -: 1921:
        -: 1922:        __crt_va_end(_ArgList);
        -: 1923:        return _Result;
        -: 1924:    }
        -: 1925:    #endif
        -: 1926:
        -: 1927:    #if defined snprintf
        -: 1928:        // This definition of snprintf will generate "warning C4005: 'snprintf': macro
        -: 1929:        // redefinition" with a subsequent line indicating where the previous definition
        -: 1930:        // of snprintf was.  This makes it easier to find where snprintf was defined.
        -: 1931:        #pragma warning(push, 1)
        -: 1932:        #pragma warning(1: 4005)
        -: 1933:        #define snprintf Do not define snprintf as a macro
        -: 1934:        #pragma warning(pop)
        -: 1935:        #error Macro definition of snprintf conflicts with Standard Library function declaration
        -: 1936:    #endif
        -: 1937:
        -: 1938:    _Success_(return >= 0)
        -: 1939:    _Check_return_opt_
        -: 1940:    _CRT_STDIO_INLINE int __CRTDECL snprintf(
        -: 1941:        _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 1942:        _In_                                              size_t      const _BufferCount,
        -: 1943:        _In_z_ _Printf_format_string_                     char const* const _Format,
        -: 1944:        ...)
        -: 1945:    #if defined _NO_CRT_STDIO_INLINE
        -: 1946:    ;
        -: 1947:    #else
        -: 1948:    {
        -: 1949:        int _Result;
        -: 1950:        va_list _ArgList;
        -: 1951:        __crt_va_start(_ArgList, _Format);
        -: 1952:    #pragma warning(suppress:28719)    // 28719
        -: 1953:        _Result = vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
        -: 1954:        __crt_va_end(_ArgList);
        -: 1955:        return _Result;
        -: 1956:    }
        -: 1957:    #endif
        -: 1958:
        -: 1959:    _Success_(return >= 0)
        -: 1960:    _Check_return_opt_
    #####: 1961:    _CRT_STDIO_INLINE int __CRTDECL _snprintf(
        -: 1962:        _Out_writes_opt_(_BufferCount) _Post_maybez_ char*       const _Buffer,
        -: 1963:        _In_                                         size_t      const _BufferCount,
        -: 1964:        _In_z_ _Printf_format_string_                char const* const _Format,
        -: 1965:        ...)
        -: 1966:    #if defined _NO_CRT_STDIO_INLINE
        -: 1967:    ;
        -: 1968:    #else
        -: 1969:    {
        -: 1970:        int _Result;
        -: 1971:        va_list _ArgList;
    #####: 1972:        __crt_va_start(_ArgList, _Format);
        -: 1973:    #pragma warning(suppress:28719)    // 28719
    #####: 1974:        _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
    #####: 1975:        __crt_va_end(_ArgList);
    #####: 1976:        return _Result;
        -: 1977:    }
        -: 1978:    #endif
        -: 1979:
        -: 1980:    __DEFINE_CPP_OVERLOAD_STANDARD_NFUNC_0_2_ARGLIST_EX(
        -: 1981:        _Success_(return >= 0)
        -: 1982:        int, __RETURN_POLICY_SAME, __EMPTY_DECLSPEC, __CRTDECL, _snprintf, _vsnprintf,
        -: 1983:        _Pre_notnull_ _Post_maybez_                   char,
        -: 1984:        _Out_writes_opt_(_BufferCount) _Post_maybez_, char,        _Buffer,
        -: 1985:        _In_                                          size_t,      _BufferCount,
        -: 1986:        _In_z_ _Printf_format_string_                 char const*, _Format
        -: 1987:        )
        -: 1988:
        -: 1989:    _Success_(return >= 0)
        -: 1990:    _Check_return_opt_
        -: 1991:    _CRT_STDIO_INLINE int __CRTDECL _snprintf_c_l(
        -: 1992:        _Out_writes_opt_(_BufferCount)          char*       const _Buffer,
        -: 1993:        _In_                                    size_t      const _BufferCount,
        -: 1994:        _In_z_ _Printf_format_string_params_(0) char const* const _Format,
        -: 1995:        _In_opt_                                _locale_t   const _Locale,
        -: 1996:        ...)
        -: 1997:    #if defined _NO_CRT_STDIO_INLINE
        -: 1998:    ;
        -: 1999:    #else
        -: 2000:    {
        -: 2001:        int _Result;
        -: 2002:        va_list _ArgList;
        -: 2003:        __crt_va_start(_ArgList, _Locale);
        -: 2004:        _Result = _vsnprintf_c_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        -: 2005:        __crt_va_end(_ArgList);
        -: 2006:        return _Result;
        -: 2007:    }
        -: 2008:    #endif
        -: 2009:
        -: 2010:    _Success_(return >= 0)
        -: 2011:    _Check_return_opt_
        -: 2012:    _CRT_STDIO_INLINE int __CRTDECL _snprintf_c(
        -: 2013:        _Out_writes_opt_(_BufferCount) char*       const _Buffer,
        -: 2014:        _In_                           size_t      const _BufferCount,
        -: 2015:        _In_z_ _Printf_format_string_  char const* const _Format,
        -: 2016:        ...)
        -: 2017:    #if defined _NO_CRT_STDIO_INLINE
        -: 2018:    ;
        -: 2019:    #else
        -: 2020:    {
        -: 2021:        int _Result;
        -: 2022:        va_list _ArgList;
        -: 2023:        __crt_va_start(_ArgList, _Format);
        -: 2024:        _Result = _vsnprintf_c_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
        -: 2025:        __crt_va_end(_ArgList);
        -: 2026:        return _Result;
        -: 2027:    }
        -: 2028:    #endif
        -: 2029:
        -: 2030:    _Success_(return >= 0)
        -: 2031:    _Check_return_opt_
        -: 2032:    _CRT_STDIO_INLINE int __CRTDECL _snprintf_s_l(
        -: 2033:        _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 2034:        _In_                                              size_t      const _BufferCount,
        -: 2035:        _In_                                              size_t      const _MaxCount,
        -: 2036:        _In_z_ _Printf_format_string_params_(0)           char const* const _Format,
        -: 2037:        _In_opt_                                          _locale_t   const _Locale,
        -: 2038:        ...)
        -: 2039:    #if defined _NO_CRT_STDIO_INLINE
        -: 2040:    ;
        -: 2041:    #else
        -: 2042:    {
        -: 2043:        int _Result;
        -: 2044:        va_list _ArgList;
        -: 2045:        __crt_va_start(_ArgList, _Locale);
        -: 2046:        _Result = _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        -: 2047:        __crt_va_end(_ArgList);
        -: 2048:        return _Result;
        -: 2049:    }
        -: 2050:    #endif
        -: 2051:
        -: 2052:    _Success_(return >= 0)
        -: 2053:    _Check_return_opt_
        -: 2054:    _CRT_STDIO_INLINE int __CRTDECL _snprintf_s(
        -: 2055:        _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
        -: 2056:        _In_                                              size_t      const _BufferCount,
        -: 2057:        _In_                                              size_t      const _MaxCount,
        -: 2058:        _In_z_ _Printf_format_string_                     char const* const _Format,
        -: 2059:        ...)
        -: 2060:    #if defined _NO_CRT_STDIO_INLINE
        -: 2061:    ;
        -: 2062:    #else
        -: 2063:    {
        -: 2064:        int _Result;
        -: 2065:        va_list _ArgList;
        -: 2066:        __crt_va_start(_ArgList, _Format);
        -: 2067:        _Result = _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);
        -: 2068:        __crt_va_end(_ArgList);
        -: 2069:        return _Result;
        -: 2070:    }
        -: 2071:    #endif
        -: 2072:
        -: 2073:    __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(
        -: 2074:        _Success_(return >= 0)
        -: 2075:        int, _snprintf_s, _vsnprintf_s,
        -: 2076:        _Always_(_Post_z_)            char,        _Buffer,
        -: 2077:        _In_                          size_t,      _BufferCount,
        -: 2078:        _In_z_ _Printf_format_string_ char const*, _Format
        -: 2079:        )
        -: 2080:
        -: 2081:    _Check_return_opt_
        -: 2082:    _CRT_STDIO_INLINE int __CRTDECL _scprintf_l(
        -: 2083:        _In_z_ _Printf_format_string_params_(0) char const* const _Format,
        -: 2084:        _In_opt_                                _locale_t   const _Locale,
        -: 2085:        ...)
        -: 2086:    #if defined _NO_CRT_STDIO_INLINE
        -: 2087:    ;
        -: 2088:    #else
        -: 2089:    {
        -: 2090:        int _Result;
        -: 2091:        va_list _ArgList;
        -: 2092:        __crt_va_start(_ArgList, _Locale);
        -: 2093:        _Result = _vscprintf_l(_Format, _Locale, _ArgList);
        -: 2094:        __crt_va_end(_ArgList);
        -: 2095:        return _Result;
        -: 2096:    }
        -: 2097:    #endif
        -: 2098:
        -: 2099:    _Check_return_
        -: 2100:    _CRT_STDIO_INLINE int __CRTDECL _scprintf(
        -: 2101:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 2102:        ...)
        -: 2103:    #if defined _NO_CRT_STDIO_INLINE
        -: 2104:    ;
        -: 2105:    #else
        -: 2106:    {
        -: 2107:        int _Result;
        -: 2108:        va_list _ArgList;
        -: 2109:        __crt_va_start(_ArgList, _Format);
        -: 2110:        _Result = _vscprintf_l(_Format, NULL, _ArgList);
        -: 2111:        __crt_va_end(_ArgList);
        -: 2112:        return _Result;
        -: 2113:    }
        -: 2114:    #endif
        -: 2115:
        -: 2116:    _Check_return_opt_
        -: 2117:    _CRT_STDIO_INLINE int __CRTDECL _scprintf_p_l(
        -: 2118:        _In_z_ _Printf_format_string_params_(0) char const* const _Format,
        -: 2119:        _In_opt_                                _locale_t   const _Locale,
        -: 2120:        ...)
        -: 2121:    #if defined _NO_CRT_STDIO_INLINE
        -: 2122:    ;
        -: 2123:    #else
        -: 2124:    {
        -: 2125:        int _Result;
        -: 2126:        va_list _ArgList;
        -: 2127:        __crt_va_start(_ArgList, _Locale);
        -: 2128:        _Result = _vscprintf_p_l(_Format, _Locale, _ArgList);
        -: 2129:        __crt_va_end(_ArgList);
        -: 2130:        return _Result;
        -: 2131:    }
        -: 2132:    #endif
        -: 2133:
        -: 2134:    _Check_return_
        -: 2135:    _CRT_STDIO_INLINE int __CRTDECL _scprintf_p(
        -: 2136:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 2137:        ...)
        -: 2138:    #if defined _NO_CRT_STDIO_INLINE
        -: 2139:    ;
        -: 2140:    #else
        -: 2141:    {
        -: 2142:        int _Result;
        -: 2143:        va_list _ArgList;
        -: 2144:        __crt_va_start(_ArgList, _Format);
        -: 2145:        _Result = _vscprintf_p(_Format, _ArgList);
        -: 2146:        __crt_va_end(_ArgList);
        -: 2147:        return _Result;
        -: 2148:    }
        -: 2149:    #endif
        -: 2150:
        -: 2151:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -: 2152:    //
        -: 2153:    // Narrow Character Formatted Input Functions (String)
        -: 2154:    //
        -: 2155:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -: 2156:    _ACRTIMP int __cdecl __stdio_common_vsscanf(
        -: 2157:        _In_                                   unsigned __int64 _Options,
        -: 2158:        _In_reads_(_BufferCount) _Pre_z_       char const*      _Buffer,
        -: 2159:        _In_                                   size_t           _BufferCount,
        -: 2160:        _In_z_ _Scanf_format_string_params_(2) char const*      _Format,
        -: 2161:        _In_opt_                               _locale_t        _Locale,
        -: 2162:                                               va_list          _ArgList
        -: 2163:        );
        -: 2164:
        -: 2165:    _Check_return_opt_
        -: 2166:    _CRT_STDIO_INLINE int __CRTDECL _vsscanf_l(
        -: 2167:        _In_z_                        char const* const _Buffer,
        -: 2168:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 2169:        _In_opt_                      _locale_t   const _Locale,
        -: 2170:                                      va_list           _ArgList
        -: 2171:        )
        -: 2172:    #if defined _NO_CRT_STDIO_INLINE
        -: 2173:    ;
        -: 2174:    #else
        -: 2175:    {
        -: 2176:        return __stdio_common_vsscanf(
        -: 2177:            _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
        -: 2178:            _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
        -: 2179:    }
        -: 2180:    #endif
        -: 2181:
        -: 2182:    _Check_return_opt_
        -: 2183:    _CRT_STDIO_INLINE int __CRTDECL vsscanf(
        -: 2184:        _In_z_                        char const* const _Buffer,
        -: 2185:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 2186:                                      va_list           _ArgList
        -: 2187:        )
        -: 2188:    #if defined _NO_CRT_STDIO_INLINE
        -: 2189:    ;
        -: 2190:    #else
        -: 2191:    {
        -: 2192:        return _vsscanf_l(_Buffer, _Format, NULL, _ArgList);
        -: 2193:    }
        -: 2194:    #endif
        -: 2195:
        -: 2196:    _Check_return_opt_
        -: 2197:    _CRT_STDIO_INLINE int __CRTDECL _vsscanf_s_l(
        -: 2198:        _In_z_                        char const* const _Buffer,
        -: 2199:        _In_z_ _Printf_format_string_ char const* const _Format,
        -: 2200:        _In_opt_                      _locale_t   const _Locale,
        -: 2201:                                      va_list           _ArgList
        -: 2202:        )
        -: 2203:    #if defined _NO_CRT_STDIO_INLINE
        -: 2204:    ;
        -: 2205:    #else
        -: 2206:    {
        -: 2207:        return __stdio_common_vsscanf(
        -: 2208:            _CRT_INTERNAL_LOCAL_SCANF_OPTIONS | _CRT_INTERNAL_SCANF_SECURECRT,
        -: 2209:            _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
        -: 2210:    }
        -: 2211:    #endif
        -: 2212:
        -: 2213:    #if __STDC_WANT_SECURE_LIB__
        -: 2214:
        -: 2215:        #pragma warning(push)
        -: 2216:        #pragma warning(disable:6530)
        -: 2217:
        -: 2218:        _Check_return_opt_
        -: 2219:        _CRT_STDIO_INLINE int __CRTDECL vsscanf_s(
        -: 2220:            _In_z_                        char const* const _Buffer,
        -: 2221:            _In_z_ _Printf_format_string_ char const* const _Format,
        -: 2222:                                          va_list           _ArgList
        -: 2223:            )
        -: 2224:    #if defined _NO_CRT_STDIO_INLINE
        -: 2225:    ;
        -: 2226:    #else
        -: 2227:        {
        -: 2228:            return _vsscanf_s_l(_Buffer, _Format, NULL, _ArgList);
        -: 2229:        }
        -: 2230:    #endif
        -: 2231:
        -: 2232:        __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2(
        -: 2233:            int, vsscanf_s,
        -: 2234:            _In_z_                        char const,  _Buffer,
        -: 2235:            _In_z_ _Printf_format_string_ char const*, _Format,
        -: 2236:                                          va_list,     _ArgList
        -: 2237:            )
        -: 2238:
        -: 2239:        #pragma warning(pop)
        -: 2240:
        -: 2241:    #endif
        -: 2242:
        -: 2243:    _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_sscanf_s_l)
        -: 2244:    _CRT_STDIO_INLINE int __CRTDECL _sscanf_l(
        -: 2245:        _In_z_                                 char const* const _Buffer,
        -: 2246:        _In_z_ _Scanf_format_string_params_(0) char const* const _Format,
        -: 2247:        _In_opt_                               _locale_t   const _Locale,
        -: 2248:        ...)
        -: 2249:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 2250:        ;
        -: 2251:    #else
        -: 2252:    {
        -: 2253:        int _Result;
        -: 2254:        va_list _ArgList;
        -: 2255:        __crt_va_start(_ArgList, _Locale);
        -: 2256:        _Result = _vsscanf_l(_Buffer, _Format, _Locale, _ArgList);
        -: 2257:        __crt_va_end(_ArgList);
        -: 2258:        return _Result;
        -: 2259:    }
        -: 2260:    #endif
        -: 2261:
        -: 2262:    _Check_return_ _CRT_INSECURE_DEPRECATE(sscanf_s)
        -: 2263:    _CRT_STDIO_INLINE int __CRTDECL sscanf(
        -: 2264:        _In_z_                       char const* const _Buffer,
        -: 2265:        _In_z_ _Scanf_format_string_ char const* const _Format,
        -: 2266:        ...)
        -: 2267:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 2268:        ;
        -: 2269:    #else
        -: 2270:    {
        -: 2271:        int _Result;
        -: 2272:        va_list _ArgList;
        -: 2273:        __crt_va_start(_ArgList, _Format);
        -: 2274:        _Result = _vsscanf_l(_Buffer, _Format, NULL, _ArgList);
        -: 2275:        __crt_va_end(_ArgList);
        -: 2276:        return _Result;
        -: 2277:    }
        -: 2278:    #endif
        -: 2279:
        -: 2280:    _Check_return_opt_
        -: 2281:    _CRT_STDIO_INLINE int __CRTDECL _sscanf_s_l(
        -: 2282:        _In_z_                                   char const* const _Buffer,
        -: 2283:        _In_z_ _Scanf_s_format_string_params_(0) char const* const _Format,
        -: 2284:        _In_opt_                                 _locale_t   const _Locale,
        -: 2285:        ...)
        -: 2286:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 2287:        ;
        -: 2288:    #else
        -: 2289:    {
        -: 2290:        int _Result;
        -: 2291:        va_list _ArgList;
        -: 2292:        __crt_va_start(_ArgList, _Locale);
        -: 2293:        _Result = _vsscanf_s_l(_Buffer, _Format, _Locale, _ArgList);
        -: 2294:        __crt_va_end(_ArgList);
        -: 2295:        return _Result;
        -: 2296:    }
        -: 2297:    #endif
        -: 2298:
        -: 2299:    #if __STDC_WANT_SECURE_LIB__
        -: 2300:
        -: 2301:        _Check_return_opt_
        -: 2302:        _CRT_STDIO_INLINE int __CRTDECL sscanf_s(
        -: 2303:            _In_z_                         char const* const _Buffer,
        -: 2304:            _In_z_ _Scanf_s_format_string_ char const* const _Format,
        -: 2305:            ...)
        -: 2306:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 2307:            ;
        -: 2308:    #else
        -: 2309:        {
        -: 2310:            int _Result;
        -: 2311:            va_list _ArgList;
        -: 2312:            __crt_va_start(_ArgList, _Format);
        -: 2313:
        -: 2314:            #pragma warning(push)
        -: 2315:            #pragma warning(disable: 4996) // Deprecation
        -: 2316:            _Result = vsscanf_s(_Buffer, _Format, _ArgList);
        -: 2317:            #pragma warning(pop)
        -: 2318:
        -: 2319:            __crt_va_end(_ArgList);
        -: 2320:            return _Result;
        -: 2321:        }
        -: 2322:    #endif
        -: 2323:
        -: 2324:    #endif
        -: 2325:
        -: 2326:    #pragma warning(push)
        -: 2327:    #pragma warning(disable:6530)
        -: 2328:
        -: 2329:    _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_snscanf_s_l)
        -: 2330:    _CRT_STDIO_INLINE int __CRTDECL _snscanf_l(
        -: 2331:        _In_reads_bytes_(_BufferCount) _Pre_z_ char const* const _Buffer,
        -: 2332:        _In_                                   size_t      const _BufferCount,
        -: 2333:        _In_z_ _Scanf_format_string_params_(0) char const* const _Format,
        -: 2334:        _In_opt_                               _locale_t   const _Locale,
        -: 2335:        ...)
        -: 2336:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 2337:        ;
        -: 2338:    #else
        -: 2339:    {
        -: 2340:        int _Result;
        -: 2341:        va_list _ArgList;
        -: 2342:        __crt_va_start(_ArgList, _Locale);
        -: 2343:
        -: 2344:        _Result = __stdio_common_vsscanf(
        -: 2345:            _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
        -: 2346:            _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        -: 2347:
        -: 2348:        __crt_va_end(_ArgList);
        -: 2349:        return _Result;
        -: 2350:    }
        -: 2351:    #endif
        -: 2352:
        -: 2353:    _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_snscanf_s)
        -: 2354:    _CRT_STDIO_INLINE int __CRTDECL _snscanf(
        -: 2355:        _In_reads_bytes_(_BufferCount) _Pre_z_ char const* const _Buffer,
        -: 2356:        _In_                                   size_t      const _BufferCount,
        -: 2357:        _In_z_ _Scanf_format_string_           char const* const _Format,
        -: 2358:        ...)
        -: 2359:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 2360:        ;
        -: 2361:    #else
        -: 2362:    {
        -: 2363:        int _Result;
        -: 2364:        va_list _ArgList;
        -: 2365:        __crt_va_start(_ArgList, _Format);
        -: 2366:
        -: 2367:        _Result = __stdio_common_vsscanf(
        -: 2368:            _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
        -: 2369:            _Buffer, _BufferCount, _Format, NULL, _ArgList);
        -: 2370:
        -: 2371:        __crt_va_end(_ArgList);
        -: 2372:        return _Result;
        -: 2373:    }
        -: 2374:    #endif
        -: 2375:
        -: 2376:
        -: 2377:    _Check_return_opt_
        -: 2378:    _CRT_STDIO_INLINE int __CRTDECL _snscanf_s_l(
        -: 2379:        _In_reads_bytes_(_BufferCount) _Pre_z_   char const* const _Buffer,
        -: 2380:        _In_                                     size_t      const _BufferCount,
        -: 2381:        _In_z_ _Scanf_s_format_string_params_(0) char const* const _Format,
        -: 2382:        _In_opt_                                 _locale_t   const _Locale,
        -: 2383:        ...)
        -: 2384:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 2385:        ;
        -: 2386:    #else
        -: 2387:    {
        -: 2388:        int _Result;
        -: 2389:        va_list _ArgList;
        -: 2390:        __crt_va_start(_ArgList, _Locale);
        -: 2391:
        -: 2392:        _Result = __stdio_common_vsscanf(
        -: 2393:            _CRT_INTERNAL_LOCAL_SCANF_OPTIONS | _CRT_INTERNAL_SCANF_SECURECRT,
        -: 2394:            _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        -: 2395:
        -: 2396:        __crt_va_end(_ArgList);
        -: 2397:        return _Result;
        -: 2398:    }
        -: 2399:    #endif
        -: 2400:
        -: 2401:    _Check_return_opt_
        -: 2402:    _CRT_STDIO_INLINE int __CRTDECL _snscanf_s(
        -: 2403:        _In_reads_bytes_(_BufferCount) _Pre_z_ char const* const _Buffer,
        -: 2404:        _In_                                   size_t      const _BufferCount,
        -: 2405:        _In_z_ _Scanf_s_format_string_         char const* const _Format,
        -: 2406:        ...)
        -: 2407:    #if defined _NO_CRT_STDIO_INLINE // SCANF
        -: 2408:        ;
        -: 2409:    #else
        -: 2410:    {
        -: 2411:        int _Result;
        -: 2412:        va_list _ArgList;
        -: 2413:        __crt_va_start(_ArgList, _Format);
        -: 2414:
        -: 2415:        _Result = __stdio_common_vsscanf(
        -: 2416:            _CRT_INTERNAL_LOCAL_SCANF_OPTIONS | _CRT_INTERNAL_SCANF_SECURECRT,
        -: 2417:            _Buffer, _BufferCount, _Format, NULL, _ArgList);
        -: 2418:
        -: 2419:        __crt_va_end(_ArgList);
        -: 2420:        return _Result;
        -: 2421:    }
        -: 2422:    #endif
        -: 2423:
        -: 2424:    #pragma warning(pop)
        -: 2425:
        -: 2426:    #if defined _M_CEE_MIXED
        -: 2427:        #pragma managed(pop)
        -: 2428:    #endif
        -: 2429:
        -: 2430:
        -: 2431:
        -: 2432:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -: 2433:    //
        -: 2434:    // Non-ANSI Names for Compatibility
        -: 2435:    //
        -: 2436:    //-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        -: 2437:    #if defined(_CRT_INTERNAL_NONSTDC_NAMES) && _CRT_INTERNAL_NONSTDC_NAMES
        -: 2438:
        -: 2439:        #define SYS_OPEN  _SYS_OPEN
        -: 2440:
        -: 2441:        #if defined _DEBUG && defined _CRTDBG_MAP_ALLOC
        -: 2442:            #pragma push_macro("tempnam")
        -: 2443:            #undef tempnam
        -: 2444:        #endif
        -: 2445:
        -: 2446:        _CRT_NONSTDC_DEPRECATE(_tempnam)
        -: 2447:        _ACRTIMP char* __cdecl tempnam(
        -: 2448:            _In_opt_z_ char const* _Directory,
        -: 2449:            _In_opt_z_ char const* _FilePrefix
        -: 2450:            );
        -: 2451:
        -: 2452:        #if defined _DEBUG && defined _CRTDBG_MAP_ALLOC
        -: 2453:            #pragma pop_macro("tempnam")
        -: 2454:        #endif
        -: 2455:
        -: 2456:        _Check_return_opt_ _CRT_NONSTDC_DEPRECATE(_fcloseall) _ACRTIMP int   __cdecl fcloseall(void);
        -: 2457:        _Check_return_     _CRT_NONSTDC_DEPRECATE(_fdopen)    _ACRTIMP FILE* __cdecl fdopen(_In_ int _FileHandle, _In_z_ char const* _Format);
        -: 2458:        _Check_return_opt_ _CRT_NONSTDC_DEPRECATE(_fgetchar)  _ACRTIMP int   __cdecl fgetchar(void);
        -: 2459:        _Check_return_     _CRT_NONSTDC_DEPRECATE(_fileno)    _ACRTIMP int   __cdecl fileno(_In_ FILE* _Stream);
        -: 2460:        _Check_return_opt_ _CRT_NONSTDC_DEPRECATE(_flushall)  _ACRTIMP int   __cdecl flushall(void);
        -: 2461:        _Check_return_opt_ _CRT_NONSTDC_DEPRECATE(_fputchar)  _ACRTIMP int   __cdecl fputchar(_In_ int _Ch);
        -: 2462:        _Check_return_     _CRT_NONSTDC_DEPRECATE(_getw)      _ACRTIMP int   __cdecl getw(_Inout_ FILE* _Stream);
        -: 2463:        _Check_return_opt_ _CRT_NONSTDC_DEPRECATE(_putw)      _ACRTIMP int   __cdecl putw(_In_ int _Ch, _Inout_ FILE* _Stream);
        -: 2464:        _Check_return_     _CRT_NONSTDC_DEPRECATE(_rmtmp)     _ACRTIMP int   __cdecl rmtmp(void);
        -: 2465:
        -: 2466:    #endif // _CRT_INTERNAL_NONSTDC_NAMES
        -: 2467:#endif // _CRT_FUNCTIONS_REQUIRED
        -: 2468:
        -: 2469:
        -: 2470:
        -: 2471:_CRT_END_C_HEADER
        -: 2472:#endif // _INC_STDIO
